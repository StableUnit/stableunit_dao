{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0xfD37BfCeAD2ccf73b7b1A5e5f7FE123Ec95CfED4",
    "txHash": "0x38b6c42e06882c797b3ad17d0190c92852fa9cfb200e90b59724614ad58c7c69"
  },
  "proxies": [
    {
      "address": "0x708071C080E5ceb3cc0fb8fb4fD1034766eAef24",
      "txHash": "0x8c5fd7cd33339520b18f891d410255c5cbe7f406e60d04dbf98dbd633dec85f8",
      "kind": "transparent"
    },
    {
      "address": "0x97eaA69F210426eaC3A391d6d4377cfe85443494",
      "txHash": "0xe00fe0f29f5e9261e9d44cf7beaddcc7e43d002ef81f999c805e34f0c6b5e4e1",
      "kind": "transparent"
    },
    {
      "address": "0x11F9724E795Ce0CD9E0366286eA45C1BC578E984",
      "txHash": "0xb198a1d55d1a0f8c63283ae7a4d65130d922edaf0c893f843fb5c938b6791b3e",
      "kind": "transparent"
    },
    {
      "address": "0x8339c0269171F9D1bDBfa61eA424F8d4a98f2Fd8",
      "txHash": "0x930967f169f89b2eeae113394907cfc37b84ed94e176aff0a8fb1f39e038e089",
      "kind": "transparent"
    },
    {
      "address": "0xa829c255b1f800180948F8051bb30ef524d61163",
      "txHash": "0xf17a078b6924f09c968f629eaaf83db1027713524154510e1d522a89649c2111",
      "kind": "transparent"
    },
    {
      "address": "0x0288BD8496254515Ec19845AfC19DC6996Dbdff9",
      "txHash": "0xdecadd6e0c0b002e5891d9e9e54bbe9c1592283ed9e26bf0fb465c1fc8649386",
      "kind": "transparent"
    },
    {
      "address": "0x8D4100B0d6fC8400f86049926082B784D03f1222",
      "txHash": "0xe5ad07e3d518b297079db3006973353ff13236f331a1a4752f0a8d41df06ef14",
      "kind": "transparent"
    },
    {
      "address": "0x1c229165Ba6B07eB19662b66345D90389e323E2B",
      "txHash": "0x1728d82986a05fd9741e6d950944bf439542b994a22d20b6490d2624ee059b3e",
      "kind": "transparent"
    },
    {
      "address": "0xd6d0Baa81D07b8eD36Fd89aa6A6fb4868f4E2502",
      "txHash": "0x9169748935e1faf37e1b3d919437a8791531ab67a8cd494bd4ec44e3608105c0",
      "kind": "transparent"
    },
    {
      "address": "0x7c0A3C89600A7ABB600A12AfE15dc27c5ebB35e8",
      "txHash": "0xdcd4db3372212f9e492d9a5c6a006f12726413d444d90202ed8c2ec421d93475",
      "kind": "transparent"
    }
  ],
  "impls": {
    "3db34783982ce0798b963e2d67e4f772e9baaa517d6a70e19e7bc29080fd0d20": {
      "address": "0x30D7386E745017953De7a32339913aE20BB180f0",
      "txHash": "0x6e2a69f823e9bbd2ebec7f30b44a1401fd9aecbcff571b49c81ae1511b883bb4",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)290_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)290_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)290_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "5b76a8d70a566843127596f35b0437f8be6d6157f91aa08b3a08520c0e67197e": {
      "address": "0xDF2e747Ae22Ea80B5f6C8f8BA8FDC2FAAC996762",
      "txHash": "0x526f9aa2dee62ec1212446f7f8c1152a98d6df10590ca4e7c880d11410579a80",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "ACCESS_CONTROL_SINGLETON",
            "offset": 2,
            "slot": "0",
            "type": "t_contract(ISuAccessControl)58034",
            "contract": "SuAuthenticated",
            "src": "contracts/periphery/contracts/access-control/SuAuthenticated.sol:16"
          },
          {
            "label": "nftInfo",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_address,t_struct(NFTInfo)53127_storage)",
            "contract": "Bonus",
            "src": "contracts/Bonus.sol:18"
          },
          {
            "label": "userInfo",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_address,t_struct(UserInfo)53134_storage)",
            "contract": "Bonus",
            "src": "contracts/Bonus.sol:19"
          },
          {
            "label": "adminInfo",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_address,t_struct(AdminInfo)53137_storage)",
            "contract": "Bonus",
            "src": "contracts/Bonus.sol:21"
          },
          {
            "label": "communityAdminInfo",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_address,t_struct(CommunityAdminInfo)53142_storage)",
            "contract": "Bonus",
            "src": "contracts/Bonus.sol:22"
          },
          {
            "label": "levelMap",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_uint16,t_uint256)",
            "contract": "Bonus",
            "src": "contracts/Bonus.sol:24"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "6",
            "type": "t_array(t_uint256)45_storage",
            "contract": "Bonus",
            "src": "contracts/Bonus.sol:190"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(ISuAccessControl)58034": {
            "label": "contract ISuAccessControl",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_struct(AdminInfo)53137_storage)": {
            "label": "mapping(address => struct IBonus.AdminInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(CommunityAdminInfo)53142_storage)": {
            "label": "mapping(address => struct IBonus.CommunityAdminInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(NFTInfo)53127_storage)": {
            "label": "mapping(address => struct IBonus.NFTInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(UserInfo)53134_storage)": {
            "label": "mapping(address => struct IBonus.UserInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint16,t_uint256)": {
            "label": "mapping(uint16 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AdminInfo)53137_storage": {
            "label": "struct IBonus.AdminInfo",
            "members": [
              {
                "label": "isAdmin",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(CommunityAdminInfo)53142_storage": {
            "label": "struct IBonus.CommunityAdminInfo",
            "members": [
              {
                "label": "xpLimit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "levelLimit",
                "type": "t_uint16",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(NFTInfo)53127_storage": {
            "label": "struct IBonus.NFTInfo",
            "members": [
              {
                "label": "allocation",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "donationBonusRatio",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UserInfo)53134_storage": {
            "label": "struct IBonus.UserInfo",
            "members": [
              {
                "label": "xp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "allocation",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "donationBonusRatio",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "8d6ad22e2026b28fe1eed5941783c18ef3d8bf1a315b8e3b21a310c75e271c94": {
      "address": "0x7a1adc8340C00AA3Ecdd4Ecf36182Eed5D1BAb0B",
      "txHash": "0x44cab46f79cfb1d1e7fc28e8c0fe4d4b0634a3fa415e1ea09d8033d344f6e0c6",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_hashedName",
            "offset": 0,
            "slot": "51",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:40",
            "renamedFrom": "_HASHED_NAME"
          },
          {
            "label": "_hashedVersion",
            "offset": 0,
            "slot": "52",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:42",
            "renamedFrom": "_HASHED_VERSION"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "53",
            "type": "t_string_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:44"
          },
          {
            "label": "_version",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:45"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "55",
            "type": "t_array(t_uint256)48_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:204"
          },
          {
            "label": "ACCESS_CONTROL_SINGLETON",
            "offset": 0,
            "slot": "103",
            "type": "t_contract(ISuAccessControl)58034",
            "contract": "SuAuthenticated",
            "src": "contracts/periphery/contracts/access-control/SuAuthenticated.sol:16"
          },
          {
            "label": "_delegation",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_address)",
            "contract": "VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/utils/VotesUpgradeable.sol:44"
          },
          {
            "label": "_delegateCheckpoints",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_address,t_struct(Trace224)7614_storage)",
            "contract": "VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/utils/VotesUpgradeable.sol:47",
            "retypedFrom": "mapping(address => Checkpoints.History)"
          },
          {
            "label": "_totalCheckpoints",
            "offset": 0,
            "slot": "106",
            "type": "t_struct(Trace224)7614_storage",
            "contract": "VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/utils/VotesUpgradeable.sol:50",
            "retypedFrom": "Checkpoints.History"
          },
          {
            "label": "_nonces",
            "offset": 0,
            "slot": "107",
            "type": "t_mapping(t_address,t_struct(Counter)8662_storage)",
            "contract": "VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/utils/VotesUpgradeable.sol:52"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "108",
            "type": "t_array(t_uint256)46_storage",
            "contract": "VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/utils/VotesUpgradeable.sol:256"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "157",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "158",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "159",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "LOCKED_TOKEN",
            "offset": 0,
            "slot": "204",
            "type": "t_contract(ERC20BurnableUpgradeable)3843",
            "contract": "VeERC20v2",
            "src": "contracts/vested-escrow/VeERC20v2.sol:39"
          },
          {
            "label": "tgeTimestamp",
            "offset": 20,
            "slot": "204",
            "type": "t_uint32",
            "contract": "VeERC20v2",
            "src": "contracts/vested-escrow/VeERC20v2.sol:40"
          },
          {
            "label": "tgeUnlockRatio1e18",
            "offset": 24,
            "slot": "204",
            "type": "t_uint64",
            "contract": "VeERC20v2",
            "src": "contracts/vested-escrow/VeERC20v2.sol:44"
          },
          {
            "label": "cliffSeconds",
            "offset": 0,
            "slot": "205",
            "type": "t_uint32",
            "contract": "VeERC20v2",
            "src": "contracts/vested-escrow/VeERC20v2.sol:47"
          },
          {
            "label": "vestingSeconds",
            "offset": 4,
            "slot": "205",
            "type": "t_uint32",
            "contract": "VeERC20v2",
            "src": "contracts/vested-escrow/VeERC20v2.sol:50"
          },
          {
            "label": "vestingFrequencySeconds",
            "offset": 8,
            "slot": "205",
            "type": "t_uint32",
            "contract": "VeERC20v2",
            "src": "contracts/vested-escrow/VeERC20v2.sol:53"
          },
          {
            "label": "alreadyWithdrawn",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VeERC20v2",
            "src": "contracts/vested-escrow/VeERC20v2.sol:55"
          },
          {
            "label": "isTransferable",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "VeERC20v2",
            "src": "contracts/vested-escrow/VeERC20v2.sol:56"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "208",
            "type": "t_array(t_uint256)49_storage",
            "contract": "VeERC20v2",
            "src": "contracts/vested-escrow/VeERC20v2.sol:229"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Checkpoint224)7619_storage)dyn_storage": {
            "label": "struct CheckpointsUpgradeable.Checkpoint224[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ERC20BurnableUpgradeable)3843": {
            "label": "contract ERC20BurnableUpgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(ISuAccessControl)58034": {
            "label": "contract ISuAccessControl",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Counter)8662_storage)": {
            "label": "mapping(address => struct CountersUpgradeable.Counter)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Trace224)7614_storage)": {
            "label": "mapping(address => struct CheckpointsUpgradeable.Trace224)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Checkpoint224)7619_storage": {
            "label": "struct CheckpointsUpgradeable.Checkpoint224",
            "members": [
              {
                "label": "_key",
                "type": "t_uint32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_value",
                "type": "t_uint224",
                "offset": 4,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Counter)8662_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Trace224)7614_storage": {
            "label": "struct CheckpointsUpgradeable.Trace224",
            "members": [
              {
                "label": "_checkpoints",
                "type": "t_array(t_struct(Checkpoint224)7619_storage)dyn_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint224": {
            "label": "uint224",
            "numberOfBytes": "28"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "c31f460785ff438a9cd4331a121c6edbda6ed4948597647ed9f85861ac81d062": {
      "address": "0x43bf5867544FebB4E89139b01ef15DCbC9E5A674",
      "txHash": "0x793b8b79093fb8f99451b5279f1b0f78ace261eba1dda21c9e495bc820f6e5ca",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_hashedName",
            "offset": 0,
            "slot": "51",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:40",
            "renamedFrom": "_HASHED_NAME"
          },
          {
            "label": "_hashedVersion",
            "offset": 0,
            "slot": "52",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:42",
            "renamedFrom": "_HASHED_VERSION"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "53",
            "type": "t_string_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:44"
          },
          {
            "label": "_version",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:45"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "55",
            "type": "t_array(t_uint256)48_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:204"
          },
          {
            "label": "ACCESS_CONTROL_SINGLETON",
            "offset": 0,
            "slot": "103",
            "type": "t_contract(ISuAccessControl)58034",
            "contract": "SuAuthenticated",
            "src": "contracts/periphery/contracts/access-control/SuAuthenticated.sol:16"
          },
          {
            "label": "_delegation",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_address)",
            "contract": "VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/utils/VotesUpgradeable.sol:44"
          },
          {
            "label": "_delegateCheckpoints",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_address,t_struct(Trace224)7614_storage)",
            "contract": "VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/utils/VotesUpgradeable.sol:47",
            "retypedFrom": "mapping(address => Checkpoints.History)"
          },
          {
            "label": "_totalCheckpoints",
            "offset": 0,
            "slot": "106",
            "type": "t_struct(Trace224)7614_storage",
            "contract": "VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/utils/VotesUpgradeable.sol:50",
            "retypedFrom": "Checkpoints.History"
          },
          {
            "label": "_nonces",
            "offset": 0,
            "slot": "107",
            "type": "t_mapping(t_address,t_struct(Counter)8662_storage)",
            "contract": "VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/utils/VotesUpgradeable.sol:52"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "108",
            "type": "t_array(t_uint256)46_storage",
            "contract": "VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/utils/VotesUpgradeable.sol:256"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "157",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "158",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "159",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "204",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC20BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:51"
          },
          {
            "label": "LOCKED_TOKEN",
            "offset": 0,
            "slot": "254",
            "type": "t_contract(ERC20Upgradeable)3701",
            "contract": "VeERC20",
            "src": "contracts/vested-escrow/VeERC20.sol:38"
          },
          {
            "label": "TGE_MAX_TIMESTAMP",
            "offset": 20,
            "slot": "254",
            "type": "t_uint32",
            "contract": "VeERC20",
            "src": "contracts/vested-escrow/VeERC20.sol:39"
          },
          {
            "label": "tgeTimestamp",
            "offset": 24,
            "slot": "254",
            "type": "t_uint32",
            "contract": "VeERC20",
            "src": "contracts/vested-escrow/VeERC20.sol:40"
          },
          {
            "label": "vestingInfo",
            "offset": 0,
            "slot": "255",
            "type": "t_mapping(t_address,t_struct(VestingInfo)63523_storage)",
            "contract": "VeERC20",
            "src": "contracts/vested-escrow/VeERC20.sol:50"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "256",
            "type": "t_array(t_uint256)49_storage",
            "contract": "VeERC20",
            "src": "contracts/vested-escrow/VeERC20.sol:267"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Checkpoint224)7619_storage)dyn_storage": {
            "label": "struct CheckpointsUpgradeable.Checkpoint224[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ERC20Upgradeable)3701": {
            "label": "contract ERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(ISuAccessControl)58034": {
            "label": "contract ISuAccessControl",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Counter)8662_storage)": {
            "label": "mapping(address => struct CountersUpgradeable.Counter)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Trace224)7614_storage)": {
            "label": "mapping(address => struct CheckpointsUpgradeable.Trace224)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(VestingInfo)63523_storage)": {
            "label": "mapping(address => struct VeERC20.VestingInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Checkpoint224)7619_storage": {
            "label": "struct CheckpointsUpgradeable.Checkpoint224",
            "members": [
              {
                "label": "_key",
                "type": "t_uint32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_value",
                "type": "t_uint224",
                "offset": 4,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Counter)8662_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Trace224)7614_storage": {
            "label": "struct CheckpointsUpgradeable.Trace224",
            "members": [
              {
                "label": "_checkpoints",
                "type": "t_array(t_struct(Checkpoint224)7619_storage)dyn_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(VestingInfo)63523_storage": {
            "label": "struct VeERC20.VestingInfo",
            "members": [
              {
                "label": "amountAlreadyWithdrawn",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "cliffSeconds",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "vestingSeconds",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "tgeUnlockRatio1e18",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "vestingFrequencySeconds",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_uint224": {
            "label": "uint224",
            "numberOfBytes": "28"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "eafec562bcfce4b84cb099cbf6cdbdaedf9dcb2deb0e7f3e77c0b6eff9816ba7": {
      "address": "0x32cbf27b88A4424923830dd2DA18e8Cc3284A68b",
      "txHash": "0x5f774537da7cd478a1a0c344d4524d69b91c93de147ea91d4f6473f78e64bb4a",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "ACCESS_CONTROL_SINGLETON",
            "offset": 2,
            "slot": "0",
            "type": "t_contract(ISuAccessControl)58034",
            "contract": "SuAuthenticated",
            "src": "contracts/periphery/contracts/access-control/SuAuthenticated.sol:16"
          },
          {
            "label": "VE_ERC_20",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "TokenDistributorV4",
            "src": "contracts/distributions/TokenDistributorV4.sol:37"
          },
          {
            "label": "SU_DAO",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "TokenDistributorV4",
            "src": "contracts/distributions/TokenDistributorV4.sol:38"
          },
          {
            "label": "BONUS_CONTRACT",
            "offset": 0,
            "slot": "3",
            "type": "t_contract(IBonus)53239",
            "contract": "TokenDistributorV4",
            "src": "contracts/distributions/TokenDistributorV4.sol:39"
          },
          {
            "label": "startTimestamp",
            "offset": 20,
            "slot": "3",
            "type": "t_uint64",
            "contract": "TokenDistributorV4",
            "src": "contracts/distributions/TokenDistributorV4.sol:41"
          },
          {
            "label": "deadlineTimestamp",
            "offset": 0,
            "slot": "4",
            "type": "t_uint64",
            "contract": "TokenDistributorV4",
            "src": "contracts/distributions/TokenDistributorV4.sol:42"
          },
          {
            "label": "donationToken",
            "offset": 8,
            "slot": "4",
            "type": "t_address",
            "contract": "TokenDistributorV4",
            "src": "contracts/distributions/TokenDistributorV4.sol:44"
          },
          {
            "label": "donationTokenToUSD1e18",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256",
            "contract": "TokenDistributorV4",
            "src": "contracts/distributions/TokenDistributorV4.sol:45"
          },
          {
            "label": "bondingCurvePolynomial1e18",
            "offset": 0,
            "slot": "6",
            "type": "t_array(t_int256)dyn_storage",
            "contract": "TokenDistributorV4",
            "src": "contracts/distributions/TokenDistributorV4.sol:46"
          },
          {
            "label": "minimumDonation",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256",
            "contract": "TokenDistributorV4",
            "src": "contracts/distributions/TokenDistributorV4.sol:48"
          },
          {
            "label": "maximumDonation",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256",
            "contract": "TokenDistributorV4",
            "src": "contracts/distributions/TokenDistributorV4.sol:49"
          },
          {
            "label": "donationGoalMin",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256",
            "contract": "TokenDistributorV4",
            "src": "contracts/distributions/TokenDistributorV4.sol:51"
          },
          {
            "label": "donationGoalMax",
            "offset": 0,
            "slot": "10",
            "type": "t_uint256",
            "contract": "TokenDistributorV4",
            "src": "contracts/distributions/TokenDistributorV4.sol:52"
          },
          {
            "label": "fullVestingSeconds",
            "offset": 0,
            "slot": "11",
            "type": "t_uint64",
            "contract": "TokenDistributorV4",
            "src": "contracts/distributions/TokenDistributorV4.sol:54"
          },
          {
            "label": "cliffSeconds",
            "offset": 8,
            "slot": "11",
            "type": "t_uint64",
            "contract": "TokenDistributorV4",
            "src": "contracts/distributions/TokenDistributorV4.sol:55"
          },
          {
            "label": "tgeUnlockRatio1e18",
            "offset": 16,
            "slot": "11",
            "type": "t_uint64",
            "contract": "TokenDistributorV4",
            "src": "contracts/distributions/TokenDistributorV4.sol:56"
          },
          {
            "label": "vestingFrequencySeconds",
            "offset": 24,
            "slot": "11",
            "type": "t_uint64",
            "contract": "TokenDistributorV4",
            "src": "contracts/distributions/TokenDistributorV4.sol:57"
          },
          {
            "label": "nftRequirement",
            "offset": 0,
            "slot": "12",
            "type": "t_struct(AddressSet)22512_storage",
            "contract": "TokenDistributorV4",
            "src": "contracts/distributions/TokenDistributorV4.sol:60"
          },
          {
            "label": "bonusStats",
            "offset": 0,
            "slot": "14",
            "type": "t_struct(BonusStats)52085_storage",
            "contract": "TokenDistributorV4",
            "src": "contracts/distributions/TokenDistributorV4.sol:65"
          },
          {
            "label": "donations",
            "offset": 0,
            "slot": "15",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "TokenDistributorV4",
            "src": "contracts/distributions/TokenDistributorV4.sol:66"
          },
          {
            "label": "totalDonations",
            "offset": 0,
            "slot": "16",
            "type": "t_uint256",
            "contract": "TokenDistributorV4",
            "src": "contracts/distributions/TokenDistributorV4.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "17",
            "type": "t_array(t_uint256)48_storage",
            "contract": "TokenDistributorV4",
            "src": "contracts/distributions/TokenDistributorV4.sol:346"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_int256)dyn_storage": {
            "label": "int256[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IBonus)53239": {
            "label": "contract IBonus",
            "numberOfBytes": "20"
          },
          "t_contract(ISuAccessControl)58034": {
            "label": "contract ISuAccessControl",
            "numberOfBytes": "20"
          },
          "t_int256": {
            "label": "int256",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)22512_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)22197_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(BonusStats)52085_storage": {
            "label": "struct TokenDistributorV4.BonusStats",
            "members": [
              {
                "label": "bonusRewarded",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Set)22197_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "982d5635ccf8f6785ca89a1bbdf174a7a16a73043a07307b73290dc0a5e87f90": {
      "address": "0x2a958EFb0dCd381c036675D564c08eB1909C38AC",
      "txHash": "0x4767b187f42b2ce7367d9b4b250737b3ba77984893c978521fc2e7ff09d3b1e8",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "ACCESS_CONTROL_SINGLETON",
            "offset": 2,
            "slot": "0",
            "type": "t_contract(ISuAccessControl)58034",
            "contract": "SuAuthenticated",
            "src": "contracts/periphery/contracts/access-control/SuAuthenticated.sol:16"
          },
          {
            "label": "VE_ERC_20",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IveERC20v2)53564",
            "contract": "SuDAOUpgrader",
            "src": "contracts/distributions/SuDAOUpgrader.sol:28"
          },
          {
            "label": "SU_DAO",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(IERC20Upgradeable)3779",
            "contract": "SuDAOUpgrader",
            "src": "contracts/distributions/SuDAOUpgrader.sol:29"
          },
          {
            "label": "SU_DAO_LEGACY",
            "offset": 0,
            "slot": "3",
            "type": "t_contract(IERC20Upgradeable)3779",
            "contract": "SuDAOUpgrader",
            "src": "contracts/distributions/SuDAOUpgrader.sol:30"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "4",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SuDAOUpgrader",
            "src": "contracts/distributions/SuDAOUpgrader.sol:72"
          }
        ],
        "types": {
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20Upgradeable)3779": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(ISuAccessControl)58034": {
            "label": "contract ISuAccessControl",
            "numberOfBytes": "20"
          },
          "t_contract(IveERC20v2)53564": {
            "label": "contract IveERC20v2",
            "numberOfBytes": "20"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "422886f841c2b08aa7f20c928145020f061ada88557a3df700dca4f8265364c4": {
      "address": "0x7C0b4b064F98bC06fa336A6527dd0F7d1c04C4d6",
      "txHash": "0x951dd85ec775ddb1658d7f03add47226d090b2a8284c40ee61d2b67f3439ddf2",
      "layout": {
        "solcVersion": "0.8.23",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "lzEndpoint",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(ILayerZeroEndpointUpgradeable)7881",
            "contract": "LzAppUpgradeable",
            "src": "contracts/3rd-party/layer-zero-labs/contracts-upgradable/lzApp/LzAppUpgradeable.sol:29"
          },
          {
            "label": "trustedRemoteLookup",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_uint16,t_bytes_storage)",
            "contract": "LzAppUpgradeable",
            "src": "contracts/3rd-party/layer-zero-labs/contracts-upgradable/lzApp/LzAppUpgradeable.sol:30"
          },
          {
            "label": "minDstGasLookup",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint16,t_mapping(t_uint16,t_uint256))",
            "contract": "LzAppUpgradeable",
            "src": "contracts/3rd-party/layer-zero-labs/contracts-upgradable/lzApp/LzAppUpgradeable.sol:31"
          },
          {
            "label": "payloadSizeLimitLookup",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_uint16,t_uint256)",
            "contract": "LzAppUpgradeable",
            "src": "contracts/3rd-party/layer-zero-labs/contracts-upgradable/lzApp/LzAppUpgradeable.sol:32"
          },
          {
            "label": "precrime",
            "offset": 0,
            "slot": "105",
            "type": "t_address",
            "contract": "LzAppUpgradeable",
            "src": "contracts/3rd-party/layer-zero-labs/contracts-upgradable/lzApp/LzAppUpgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "106",
            "type": "t_array(t_uint256)45_storage",
            "contract": "LzAppUpgradeable",
            "src": "contracts/3rd-party/layer-zero-labs/contracts-upgradable/lzApp/LzAppUpgradeable.sol:159"
          },
          {
            "label": "failedMessages",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))",
            "contract": "NonblockingLzAppUpgradeable",
            "src": "contracts/3rd-party/layer-zero-labs/contracts-upgradable/lzApp/NonblockingLzAppUpgradeable.sol:26"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "NonblockingLzAppUpgradeable",
            "src": "contracts/3rd-party/layer-zero-labs/contracts-upgradable/lzApp/NonblockingLzAppUpgradeable.sol:71"
          },
          {
            "label": "ACCESS_CONTROL_SINGLETON",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(ISuAccessControl)10831",
            "contract": "SuAuthenticated",
            "src": "contracts/periphery/contracts/access-control/SuAuthenticated.sol:16"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "minGasToTransferAndStore",
            "offset": 0,
            "slot": "252",
            "type": "t_uint256",
            "contract": "ONFT721CoreUpgradeable",
            "src": "contracts/3rd-party/layer-zero-labs/contracts-upgradable/token/onft/ERC721/ONFT721CoreUpgradeable.sol:26"
          },
          {
            "label": "dstChainIdToBatchLimit",
            "offset": 0,
            "slot": "253",
            "type": "t_mapping(t_uint16,t_uint256)",
            "contract": "ONFT721CoreUpgradeable",
            "src": "contracts/3rd-party/layer-zero-labs/contracts-upgradable/token/onft/ERC721/ONFT721CoreUpgradeable.sol:27"
          },
          {
            "label": "dstChainIdToTransferGas",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint16,t_uint256)",
            "contract": "ONFT721CoreUpgradeable",
            "src": "contracts/3rd-party/layer-zero-labs/contracts-upgradable/token/onft/ERC721/ONFT721CoreUpgradeable.sol:28"
          },
          {
            "label": "storedCredits",
            "offset": 0,
            "slot": "255",
            "type": "t_mapping(t_bytes32,t_struct(StoredCredit)8952_storage)",
            "contract": "ONFT721CoreUpgradeable",
            "src": "contracts/3rd-party/layer-zero-labs/contracts-upgradable/token/onft/ERC721/ONFT721CoreUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "256",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ONFT721CoreUpgradeable",
            "src": "contracts/3rd-party/layer-zero-labs/contracts-upgradable/token/onft/ERC721/ONFT721CoreUpgradeable.sol:173"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "302",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "303",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "304",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "305",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "306",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "307",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "308",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:477"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ONFT721Upgradeable",
            "src": "contracts/3rd-party/layer-zero-labs/contracts-upgradable/token/onft/ERC721/ONFT721Upgradeable.sol:50"
          },
          {
            "label": "_hashedName",
            "offset": 0,
            "slot": "402",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:40",
            "renamedFrom": "_HASHED_NAME"
          },
          {
            "label": "_hashedVersion",
            "offset": 0,
            "slot": "403",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:42",
            "renamedFrom": "_HASHED_VERSION"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "404",
            "type": "t_string_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:44"
          },
          {
            "label": "_version",
            "offset": 0,
            "slot": "405",
            "type": "t_string_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:45"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "406",
            "type": "t_array(t_uint256)48_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:204"
          },
          {
            "label": "_delegation",
            "offset": 0,
            "slot": "454",
            "type": "t_mapping(t_address,t_address)",
            "contract": "VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/utils/VotesUpgradeable.sol:44"
          },
          {
            "label": "_delegateCheckpoints",
            "offset": 0,
            "slot": "455",
            "type": "t_mapping(t_address,t_struct(Trace224)3128_storage)",
            "contract": "VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/utils/VotesUpgradeable.sol:47",
            "retypedFrom": "mapping(address => Checkpoints.History)"
          },
          {
            "label": "_totalCheckpoints",
            "offset": 0,
            "slot": "456",
            "type": "t_struct(Trace224)3128_storage",
            "contract": "VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/utils/VotesUpgradeable.sol:50",
            "retypedFrom": "Checkpoints.History"
          },
          {
            "label": "_nonces",
            "offset": 0,
            "slot": "457",
            "type": "t_mapping(t_address,t_struct(Counter)4176_storage)",
            "contract": "VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/utils/VotesUpgradeable.sol:52"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "458",
            "type": "t_array(t_uint256)46_storage",
            "contract": "VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/utils/VotesUpgradeable.sol:256"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "504",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721VotesUpgradeable.sol:55"
          },
          {
            "label": "hasMinted",
            "offset": 0,
            "slot": "554",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "MockErc721CrossChainV2",
            "src": "contracts/mocks/MockErc721CrossChainV2.sol:10"
          },
          {
            "label": "baseURI",
            "offset": 0,
            "slot": "555",
            "type": "t_string_storage",
            "contract": "MockErc721CrossChainV2",
            "src": "contracts/mocks/MockErc721CrossChainV2.sol:11"
          },
          {
            "label": "nextMintId",
            "offset": 0,
            "slot": "556",
            "type": "t_uint256",
            "contract": "MockErc721CrossChainV2",
            "src": "contracts/mocks/MockErc721CrossChainV2.sol:12"
          },
          {
            "label": "maxMintId",
            "offset": 0,
            "slot": "557",
            "type": "t_uint256",
            "contract": "MockErc721CrossChainV2",
            "src": "contracts/mocks/MockErc721CrossChainV2.sol:13"
          },
          {
            "label": "backendSigner",
            "offset": 0,
            "slot": "558",
            "type": "t_address",
            "contract": "MockErc721CrossChainV2",
            "src": "contracts/mocks/MockErc721CrossChainV2.sol:14"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "559",
            "type": "t_array(t_uint256)50_storage",
            "contract": "MockErc721CrossChainV2",
            "src": "contracts/mocks/MockErc721CrossChainV2.sol:93"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Checkpoint224)3133_storage)dyn_storage": {
            "label": "struct CheckpointsUpgradeable.Checkpoint224[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_memory_ptr": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(ILayerZeroEndpointUpgradeable)7881": {
            "label": "contract ILayerZeroEndpointUpgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(ISuAccessControl)10831": {
            "label": "contract ISuAccessControl",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Counter)4176_storage)": {
            "label": "mapping(address => struct CountersUpgradeable.Counter)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Trace224)3128_storage)": {
            "label": "mapping(address => struct CheckpointsUpgradeable.Trace224)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(StoredCredit)8952_storage)": {
            "label": "mapping(bytes32 => struct ONFT721CoreUpgradeable.StoredCredit)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32))": {
            "label": "mapping(bytes => mapping(uint64 => bytes32))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint16,t_bytes_storage)": {
            "label": "mapping(uint16 => bytes)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))": {
            "label": "mapping(uint16 => mapping(bytes => mapping(uint64 => bytes32)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint16,t_mapping(t_uint16,t_uint256))": {
            "label": "mapping(uint16 => mapping(uint16 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint16,t_uint256)": {
            "label": "mapping(uint16 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint64,t_bytes32)": {
            "label": "mapping(uint64 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Checkpoint224)3133_storage": {
            "label": "struct CheckpointsUpgradeable.Checkpoint224",
            "members": [
              {
                "label": "_key",
                "type": "t_uint32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_value",
                "type": "t_uint224",
                "offset": 4,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Counter)4176_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(StoredCredit)8952_storage": {
            "label": "struct ONFT721CoreUpgradeable.StoredCredit",
            "members": [
              {
                "label": "srcChainId",
                "type": "t_uint16",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "toAddress",
                "type": "t_address",
                "offset": 2,
                "slot": "0"
              },
              {
                "label": "index",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "creditsRemain",
                "type": "t_bool",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(Trace224)3128_storage": {
            "label": "struct CheckpointsUpgradeable.Trace224",
            "members": [
              {
                "label": "_checkpoints",
                "type": "t_array(t_struct(Checkpoint224)3133_storage)dyn_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint224": {
            "label": "uint224",
            "numberOfBytes": "28"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "01b8dcee07619ac905e8854c5f1cad94d88c8f524a5a73bf8e37a2d8d7dc4ca7": {
      "address": "0xc3Da504D9Cb5A35d3A839C1Dd07a1b706d085544",
      "txHash": "0xd5dae3693ec8886bd6158c6906f893070444e23f38a5c8e7ef2f20b6a8029ec8",
      "layout": {
        "solcVersion": "0.8.23",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "lzEndpoint",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(ILayerZeroEndpointUpgradeable)7836",
            "contract": "LzAppUpgradeable",
            "src": "contracts/3rd-party/layer-zero-labs/contracts-upgradable/lzApp/LzAppUpgradeable.sol:29"
          },
          {
            "label": "trustedRemoteLookup",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_uint16,t_bytes_storage)",
            "contract": "LzAppUpgradeable",
            "src": "contracts/3rd-party/layer-zero-labs/contracts-upgradable/lzApp/LzAppUpgradeable.sol:30"
          },
          {
            "label": "minDstGasLookup",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint16,t_mapping(t_uint16,t_uint256))",
            "contract": "LzAppUpgradeable",
            "src": "contracts/3rd-party/layer-zero-labs/contracts-upgradable/lzApp/LzAppUpgradeable.sol:31"
          },
          {
            "label": "payloadSizeLimitLookup",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_uint16,t_uint256)",
            "contract": "LzAppUpgradeable",
            "src": "contracts/3rd-party/layer-zero-labs/contracts-upgradable/lzApp/LzAppUpgradeable.sol:32"
          },
          {
            "label": "precrime",
            "offset": 0,
            "slot": "105",
            "type": "t_address",
            "contract": "LzAppUpgradeable",
            "src": "contracts/3rd-party/layer-zero-labs/contracts-upgradable/lzApp/LzAppUpgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "106",
            "type": "t_array(t_uint256)45_storage",
            "contract": "LzAppUpgradeable",
            "src": "contracts/3rd-party/layer-zero-labs/contracts-upgradable/lzApp/LzAppUpgradeable.sol:159"
          },
          {
            "label": "failedMessages",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))",
            "contract": "NonblockingLzAppUpgradeable",
            "src": "contracts/3rd-party/layer-zero-labs/contracts-upgradable/lzApp/NonblockingLzAppUpgradeable.sol:26"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "NonblockingLzAppUpgradeable",
            "src": "contracts/3rd-party/layer-zero-labs/contracts-upgradable/lzApp/NonblockingLzAppUpgradeable.sol:71"
          },
          {
            "label": "ACCESS_CONTROL_SINGLETON",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(ISuAccessControl)10793",
            "contract": "SuAuthenticated",
            "src": "contracts/periphery/contracts/access-control/SuAuthenticated.sol:16"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "minGasToTransferAndStore",
            "offset": 0,
            "slot": "252",
            "type": "t_uint256",
            "contract": "ONFT721CoreUpgradeable",
            "src": "contracts/3rd-party/layer-zero-labs/contracts-upgradable/token/onft/ERC721/ONFT721CoreUpgradeable.sol:26"
          },
          {
            "label": "dstChainIdToBatchLimit",
            "offset": 0,
            "slot": "253",
            "type": "t_mapping(t_uint16,t_uint256)",
            "contract": "ONFT721CoreUpgradeable",
            "src": "contracts/3rd-party/layer-zero-labs/contracts-upgradable/token/onft/ERC721/ONFT721CoreUpgradeable.sol:27"
          },
          {
            "label": "dstChainIdToTransferGas",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint16,t_uint256)",
            "contract": "ONFT721CoreUpgradeable",
            "src": "contracts/3rd-party/layer-zero-labs/contracts-upgradable/token/onft/ERC721/ONFT721CoreUpgradeable.sol:28"
          },
          {
            "label": "storedCredits",
            "offset": 0,
            "slot": "255",
            "type": "t_mapping(t_bytes32,t_struct(StoredCredit)8907_storage)",
            "contract": "ONFT721CoreUpgradeable",
            "src": "contracts/3rd-party/layer-zero-labs/contracts-upgradable/token/onft/ERC721/ONFT721CoreUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "256",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ONFT721CoreUpgradeable",
            "src": "contracts/3rd-party/layer-zero-labs/contracts-upgradable/token/onft/ERC721/ONFT721CoreUpgradeable.sol:173"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "302",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "303",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "304",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "305",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "306",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "307",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "308",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:477"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ONFT721Upgradeable",
            "src": "contracts/3rd-party/layer-zero-labs/contracts-upgradable/token/onft/ERC721/ONFT721Upgradeable.sol:50"
          },
          {
            "label": "_hashedName",
            "offset": 0,
            "slot": "402",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:40",
            "renamedFrom": "_HASHED_NAME"
          },
          {
            "label": "_hashedVersion",
            "offset": 0,
            "slot": "403",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:42",
            "renamedFrom": "_HASHED_VERSION"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "404",
            "type": "t_string_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:44"
          },
          {
            "label": "_version",
            "offset": 0,
            "slot": "405",
            "type": "t_string_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:45"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "406",
            "type": "t_array(t_uint256)48_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:204"
          },
          {
            "label": "_delegation",
            "offset": 0,
            "slot": "454",
            "type": "t_mapping(t_address,t_address)",
            "contract": "VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/utils/VotesUpgradeable.sol:44"
          },
          {
            "label": "_delegateCheckpoints",
            "offset": 0,
            "slot": "455",
            "type": "t_mapping(t_address,t_struct(Trace224)3128_storage)",
            "contract": "VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/utils/VotesUpgradeable.sol:47",
            "retypedFrom": "mapping(address => Checkpoints.History)"
          },
          {
            "label": "_totalCheckpoints",
            "offset": 0,
            "slot": "456",
            "type": "t_struct(Trace224)3128_storage",
            "contract": "VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/utils/VotesUpgradeable.sol:50",
            "retypedFrom": "Checkpoints.History"
          },
          {
            "label": "_nonces",
            "offset": 0,
            "slot": "457",
            "type": "t_mapping(t_address,t_struct(Counter)4176_storage)",
            "contract": "VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/utils/VotesUpgradeable.sol:52"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "458",
            "type": "t_array(t_uint256)46_storage",
            "contract": "VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/utils/VotesUpgradeable.sol:256"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "504",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721VotesUpgradeable.sol:55"
          },
          {
            "label": "hasMinted",
            "offset": 0,
            "slot": "554",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "MockErc721CrossChainV2",
            "src": "contracts/mocks/MockErc721CrossChainV2.sol:10"
          },
          {
            "label": "baseURI",
            "offset": 0,
            "slot": "555",
            "type": "t_string_storage",
            "contract": "MockErc721CrossChainV2",
            "src": "contracts/mocks/MockErc721CrossChainV2.sol:11"
          },
          {
            "label": "nextMintId",
            "offset": 0,
            "slot": "556",
            "type": "t_uint256",
            "contract": "MockErc721CrossChainV2",
            "src": "contracts/mocks/MockErc721CrossChainV2.sol:12"
          },
          {
            "label": "maxMintId",
            "offset": 0,
            "slot": "557",
            "type": "t_uint256",
            "contract": "MockErc721CrossChainV2",
            "src": "contracts/mocks/MockErc721CrossChainV2.sol:13"
          },
          {
            "label": "backendSigner",
            "offset": 0,
            "slot": "558",
            "type": "t_address",
            "contract": "MockErc721CrossChainV2",
            "src": "contracts/mocks/MockErc721CrossChainV2.sol:14"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "559",
            "type": "t_array(t_uint256)50_storage",
            "contract": "MockErc721CrossChainV2",
            "src": "contracts/mocks/MockErc721CrossChainV2.sol:93"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Checkpoint224)3133_storage)dyn_storage": {
            "label": "struct CheckpointsUpgradeable.Checkpoint224[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_memory_ptr": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(ILayerZeroEndpointUpgradeable)7836": {
            "label": "contract ILayerZeroEndpointUpgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(ISuAccessControl)10793": {
            "label": "contract ISuAccessControl",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Counter)4176_storage)": {
            "label": "mapping(address => struct CountersUpgradeable.Counter)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Trace224)3128_storage)": {
            "label": "mapping(address => struct CheckpointsUpgradeable.Trace224)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(StoredCredit)8907_storage)": {
            "label": "mapping(bytes32 => struct ONFT721CoreUpgradeable.StoredCredit)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32))": {
            "label": "mapping(bytes => mapping(uint64 => bytes32))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint16,t_bytes_storage)": {
            "label": "mapping(uint16 => bytes)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))": {
            "label": "mapping(uint16 => mapping(bytes => mapping(uint64 => bytes32)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint16,t_mapping(t_uint16,t_uint256))": {
            "label": "mapping(uint16 => mapping(uint16 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint16,t_uint256)": {
            "label": "mapping(uint16 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint64,t_bytes32)": {
            "label": "mapping(uint64 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Checkpoint224)3133_storage": {
            "label": "struct CheckpointsUpgradeable.Checkpoint224",
            "members": [
              {
                "label": "_key",
                "type": "t_uint32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_value",
                "type": "t_uint224",
                "offset": 4,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Counter)4176_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(StoredCredit)8907_storage": {
            "label": "struct ONFT721CoreUpgradeable.StoredCredit",
            "members": [
              {
                "label": "srcChainId",
                "type": "t_uint16",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "toAddress",
                "type": "t_address",
                "offset": 2,
                "slot": "0"
              },
              {
                "label": "index",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "creditsRemain",
                "type": "t_bool",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(Trace224)3128_storage": {
            "label": "struct CheckpointsUpgradeable.Trace224",
            "members": [
              {
                "label": "_checkpoints",
                "type": "t_array(t_struct(Checkpoint224)3133_storage)dyn_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint224": {
            "label": "uint224",
            "numberOfBytes": "28"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "0b2fca8dfe89329a06a7805829d7a6bf71081e1c46e63911696211461a7b9621": {
      "address": "0xd162dB6C2051e700Bf95286323708ea39b7b34d9",
      "txHash": "0x449de12319bbee15b1fc50904f7a11269aec7eb5aa40031a78b1e6d7b011d5ac",
      "layout": {
        "solcVersion": "0.8.23",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "lzEndpoint",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(ILayerZeroEndpointUpgradeable)7836",
            "contract": "LzAppUpgradeable",
            "src": "contracts/3rd-party/layer-zero-labs/contracts-upgradable/lzApp/LzAppUpgradeable.sol:29"
          },
          {
            "label": "trustedRemoteLookup",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_uint16,t_bytes_storage)",
            "contract": "LzAppUpgradeable",
            "src": "contracts/3rd-party/layer-zero-labs/contracts-upgradable/lzApp/LzAppUpgradeable.sol:30"
          },
          {
            "label": "minDstGasLookup",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint16,t_mapping(t_uint16,t_uint256))",
            "contract": "LzAppUpgradeable",
            "src": "contracts/3rd-party/layer-zero-labs/contracts-upgradable/lzApp/LzAppUpgradeable.sol:31"
          },
          {
            "label": "payloadSizeLimitLookup",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_uint16,t_uint256)",
            "contract": "LzAppUpgradeable",
            "src": "contracts/3rd-party/layer-zero-labs/contracts-upgradable/lzApp/LzAppUpgradeable.sol:32"
          },
          {
            "label": "precrime",
            "offset": 0,
            "slot": "105",
            "type": "t_address",
            "contract": "LzAppUpgradeable",
            "src": "contracts/3rd-party/layer-zero-labs/contracts-upgradable/lzApp/LzAppUpgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "106",
            "type": "t_array(t_uint256)45_storage",
            "contract": "LzAppUpgradeable",
            "src": "contracts/3rd-party/layer-zero-labs/contracts-upgradable/lzApp/LzAppUpgradeable.sol:159"
          },
          {
            "label": "failedMessages",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))",
            "contract": "NonblockingLzAppUpgradeable",
            "src": "contracts/3rd-party/layer-zero-labs/contracts-upgradable/lzApp/NonblockingLzAppUpgradeable.sol:26"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "NonblockingLzAppUpgradeable",
            "src": "contracts/3rd-party/layer-zero-labs/contracts-upgradable/lzApp/NonblockingLzAppUpgradeable.sol:71"
          },
          {
            "label": "ACCESS_CONTROL_SINGLETON",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(ISuAccessControl)11047",
            "contract": "SuAuthenticated",
            "src": "contracts/periphery/contracts/access-control/SuAuthenticated.sol:16"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "minGasToTransferAndStore",
            "offset": 0,
            "slot": "252",
            "type": "t_uint256",
            "contract": "ONFT721CoreUpgradeable",
            "src": "contracts/3rd-party/layer-zero-labs/contracts-upgradable/token/onft/ERC721/ONFT721CoreUpgradeable.sol:26"
          },
          {
            "label": "dstChainIdToBatchLimit",
            "offset": 0,
            "slot": "253",
            "type": "t_mapping(t_uint16,t_uint256)",
            "contract": "ONFT721CoreUpgradeable",
            "src": "contracts/3rd-party/layer-zero-labs/contracts-upgradable/token/onft/ERC721/ONFT721CoreUpgradeable.sol:27"
          },
          {
            "label": "dstChainIdToTransferGas",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint16,t_uint256)",
            "contract": "ONFT721CoreUpgradeable",
            "src": "contracts/3rd-party/layer-zero-labs/contracts-upgradable/token/onft/ERC721/ONFT721CoreUpgradeable.sol:28"
          },
          {
            "label": "storedCredits",
            "offset": 0,
            "slot": "255",
            "type": "t_mapping(t_bytes32,t_struct(StoredCredit)8907_storage)",
            "contract": "ONFT721CoreUpgradeable",
            "src": "contracts/3rd-party/layer-zero-labs/contracts-upgradable/token/onft/ERC721/ONFT721CoreUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "256",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ONFT721CoreUpgradeable",
            "src": "contracts/3rd-party/layer-zero-labs/contracts-upgradable/token/onft/ERC721/ONFT721CoreUpgradeable.sol:173"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "302",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "303",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "304",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "305",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "306",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "307",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "308",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:477"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "352",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ONFT721Upgradeable",
            "src": "contracts/3rd-party/layer-zero-labs/contracts-upgradable/token/onft/ERC721/ONFT721Upgradeable.sol:50"
          },
          {
            "label": "_hashedName",
            "offset": 0,
            "slot": "402",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:40",
            "renamedFrom": "_HASHED_NAME"
          },
          {
            "label": "_hashedVersion",
            "offset": 0,
            "slot": "403",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:42",
            "renamedFrom": "_HASHED_VERSION"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "404",
            "type": "t_string_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:44"
          },
          {
            "label": "_version",
            "offset": 0,
            "slot": "405",
            "type": "t_string_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:45"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "406",
            "type": "t_array(t_uint256)48_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:204"
          },
          {
            "label": "_delegation",
            "offset": 0,
            "slot": "454",
            "type": "t_mapping(t_address,t_address)",
            "contract": "VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/utils/VotesUpgradeable.sol:44"
          },
          {
            "label": "_delegateCheckpoints",
            "offset": 0,
            "slot": "455",
            "type": "t_mapping(t_address,t_struct(Trace224)3128_storage)",
            "contract": "VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/utils/VotesUpgradeable.sol:47",
            "retypedFrom": "mapping(address => Checkpoints.History)"
          },
          {
            "label": "_totalCheckpoints",
            "offset": 0,
            "slot": "456",
            "type": "t_struct(Trace224)3128_storage",
            "contract": "VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/utils/VotesUpgradeable.sol:50",
            "retypedFrom": "Checkpoints.History"
          },
          {
            "label": "_nonces",
            "offset": 0,
            "slot": "457",
            "type": "t_mapping(t_address,t_struct(Counter)4176_storage)",
            "contract": "VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/utils/VotesUpgradeable.sol:52"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "458",
            "type": "t_array(t_uint256)46_storage",
            "contract": "VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/utils/VotesUpgradeable.sol:256"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "504",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721VotesUpgradeable.sol:55"
          },
          {
            "label": "hasMinted",
            "offset": 0,
            "slot": "554",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "SuDAONFT",
            "src": "contracts/SuDAONFT.sol:10"
          },
          {
            "label": "baseURI",
            "offset": 0,
            "slot": "555",
            "type": "t_string_storage",
            "contract": "SuDAONFT",
            "src": "contracts/SuDAONFT.sol:11"
          },
          {
            "label": "nextMintId",
            "offset": 0,
            "slot": "556",
            "type": "t_uint256",
            "contract": "SuDAONFT",
            "src": "contracts/SuDAONFT.sol:12"
          },
          {
            "label": "maxMintId",
            "offset": 0,
            "slot": "557",
            "type": "t_uint256",
            "contract": "SuDAONFT",
            "src": "contracts/SuDAONFT.sol:13"
          },
          {
            "label": "backendSigner",
            "offset": 0,
            "slot": "558",
            "type": "t_address",
            "contract": "SuDAONFT",
            "src": "contracts/SuDAONFT.sol:14"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "559",
            "type": "t_array(t_uint256)50_storage",
            "contract": "SuDAONFT",
            "src": "contracts/SuDAONFT.sol:93"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Checkpoint224)3133_storage)dyn_storage": {
            "label": "struct CheckpointsUpgradeable.Checkpoint224[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_memory_ptr": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(ILayerZeroEndpointUpgradeable)7836": {
            "label": "contract ILayerZeroEndpointUpgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(ISuAccessControl)11047": {
            "label": "contract ISuAccessControl",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Counter)4176_storage)": {
            "label": "mapping(address => struct CountersUpgradeable.Counter)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Trace224)3128_storage)": {
            "label": "mapping(address => struct CheckpointsUpgradeable.Trace224)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(StoredCredit)8907_storage)": {
            "label": "mapping(bytes32 => struct ONFT721CoreUpgradeable.StoredCredit)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32))": {
            "label": "mapping(bytes => mapping(uint64 => bytes32))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint16,t_bytes_storage)": {
            "label": "mapping(uint16 => bytes)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))": {
            "label": "mapping(uint16 => mapping(bytes => mapping(uint64 => bytes32)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint16,t_mapping(t_uint16,t_uint256))": {
            "label": "mapping(uint16 => mapping(uint16 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint16,t_uint256)": {
            "label": "mapping(uint16 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint64,t_bytes32)": {
            "label": "mapping(uint64 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Checkpoint224)3133_storage": {
            "label": "struct CheckpointsUpgradeable.Checkpoint224",
            "members": [
              {
                "label": "_key",
                "type": "t_uint32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_value",
                "type": "t_uint224",
                "offset": 4,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Counter)4176_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(StoredCredit)8907_storage": {
            "label": "struct ONFT721CoreUpgradeable.StoredCredit",
            "members": [
              {
                "label": "srcChainId",
                "type": "t_uint16",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "toAddress",
                "type": "t_address",
                "offset": 2,
                "slot": "0"
              },
              {
                "label": "index",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "creditsRemain",
                "type": "t_bool",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(Trace224)3128_storage": {
            "label": "struct CheckpointsUpgradeable.Trace224",
            "members": [
              {
                "label": "_checkpoints",
                "type": "t_array(t_struct(Checkpoint224)3133_storage)dyn_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint224": {
            "label": "uint224",
            "numberOfBytes": "28"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    }
  }
}
