{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0xB2ef53b8119d1a698aFD43f6813144E5ACFa0951",
    "txHash": "0x88eca577bb150e8d081f4b1037441ab1ba3726ae6cd413d52f694e78182fe660"
  },
  "proxies": [
    {
      "address": "0xdb3E4B51C30A38Ac5944F7c2CAF4302C6f55480A",
      "txHash": "0xd94b3c37ad3fd0badf9b950e921f7883daa5b80e2a3e626ba4e4b92501aa1995",
      "kind": "transparent"
    },
    {
      "address": "0x666666679eb68ffef7244859a2016B0D28664998",
      "txHash": "0x1445a9b6cc75c088a0e0d70c2987f86d2e3e2194d237c3f3c0c95d2f8b7edf19",
      "kind": "transparent"
    },
    {
      "address": "0x555555ABe05BE44e1e70DB3206f0b71B1082de2f",
      "txHash": "0x107a7f6dce61c69db930d3641922ce3e2454fc3a8a1b8811eaa4e32de7d595cf",
      "kind": "transparent"
    }
  ],
  "impls": {
    "dd4241cea4be15d36b2c51d945f12fb1553af981e3e679e0d8a8e7e2bd1624cd": {
      "address": "0x33Df5F1897Fb6fEDdDF8e2544275E43529EF8195",
      "txHash": "0x04adcc38d29d2a1f120f41bbea3bc692598d052edd521bb12b85b9f14cd53328",
      "layout": {
        "solcVersion": "0.8.15",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "854f0480fe8f23045b6b807e126e0b3ee6279ad20ee3919b58b23c7f027ec0c4": {
      "address": "0x866548d946CDE3Af0a2b0C2D273e4616502677Df",
      "txHash": "0x93f53cdfc94c9f4bdfc6893a7740635872da2c3544d0c493c784dbff0ba2bb3f",
      "layout": {
        "solcVersion": "0.8.15",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "ACCESS_CONTROL_SINGLETON",
            "offset": 0,
            "slot": "51",
            "type": "t_contract(ISuAccessControl)30579",
            "contract": "SuAccessControlAuthenticated",
            "src": "contracts/access-control/SuAccessControlAuthenticated.sol:20"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "SuAccessControlAuthenticated",
            "src": "contracts/access-control/SuAccessControlAuthenticated.sol:54"
          },
          {
            "label": "_hashedName",
            "offset": 0,
            "slot": "101",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:40",
            "renamedFrom": "_HASHED_NAME"
          },
          {
            "label": "_hashedVersion",
            "offset": 0,
            "slot": "102",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:42",
            "renamedFrom": "_HASHED_VERSION"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "103",
            "type": "t_string_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:44"
          },
          {
            "label": "_version",
            "offset": 0,
            "slot": "104",
            "type": "t_string_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:45"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "105",
            "type": "t_array(t_uint256)48_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:204"
          },
          {
            "label": "_delegation",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_address)",
            "contract": "VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/utils/VotesUpgradeable.sol:44"
          },
          {
            "label": "_delegateCheckpoints",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_struct(Trace224)5935_storage)",
            "contract": "VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/utils/VotesUpgradeable.sol:47",
            "retypedFrom": "mapping(address => Checkpoints.History)"
          },
          {
            "label": "_totalCheckpoints",
            "offset": 0,
            "slot": "155",
            "type": "t_struct(Trace224)5935_storage",
            "contract": "VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/utils/VotesUpgradeable.sol:50",
            "retypedFrom": "Checkpoints.History"
          },
          {
            "label": "_nonces",
            "offset": 0,
            "slot": "156",
            "type": "t_mapping(t_address,t_struct(Counter)6983_storage)",
            "contract": "VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/utils/VotesUpgradeable.sol:52"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "157",
            "type": "t_array(t_uint256)46_storage",
            "contract": "VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/utils/VotesUpgradeable.sol:256"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "205",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "206",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "207",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "208",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "LOCKED_TOKEN",
            "offset": 0,
            "slot": "253",
            "type": "t_contract(ERC20BurnableUpgradeable)2164",
            "contract": "VeERC20v2",
            "src": "contracts/vested-escrow/VeERC20v2.sol:40"
          },
          {
            "label": "tgeTimestamp",
            "offset": 20,
            "slot": "253",
            "type": "t_uint32",
            "contract": "VeERC20v2",
            "src": "contracts/vested-escrow/VeERC20v2.sol:41"
          },
          {
            "label": "tgeUnlockRatio1e18",
            "offset": 24,
            "slot": "253",
            "type": "t_uint64",
            "contract": "VeERC20v2",
            "src": "contracts/vested-escrow/VeERC20v2.sol:45"
          },
          {
            "label": "cliffSeconds",
            "offset": 0,
            "slot": "254",
            "type": "t_uint32",
            "contract": "VeERC20v2",
            "src": "contracts/vested-escrow/VeERC20v2.sol:48"
          },
          {
            "label": "vestingSeconds",
            "offset": 4,
            "slot": "254",
            "type": "t_uint32",
            "contract": "VeERC20v2",
            "src": "contracts/vested-escrow/VeERC20v2.sol:51"
          },
          {
            "label": "vestingFrequencySeconds",
            "offset": 8,
            "slot": "254",
            "type": "t_uint32",
            "contract": "VeERC20v2",
            "src": "contracts/vested-escrow/VeERC20v2.sol:54"
          },
          {
            "label": "alreadyWithdrawn",
            "offset": 0,
            "slot": "255",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VeERC20v2",
            "src": "contracts/vested-escrow/VeERC20v2.sol:56"
          },
          {
            "label": "isTransferable",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "VeERC20v2",
            "src": "contracts/vested-escrow/VeERC20v2.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "257",
            "type": "t_array(t_uint256)49_storage",
            "contract": "VeERC20v2",
            "src": "contracts/vested-escrow/VeERC20v2.sol:226"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Checkpoint224)5940_storage)dyn_storage": {
            "label": "struct CheckpointsUpgradeable.Checkpoint224[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ERC20BurnableUpgradeable)2164": {
            "label": "contract ERC20BurnableUpgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(ISuAccessControl)30579": {
            "label": "contract ISuAccessControl",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Counter)6983_storage)": {
            "label": "mapping(address => struct CountersUpgradeable.Counter)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Trace224)5935_storage)": {
            "label": "mapping(address => struct CheckpointsUpgradeable.Trace224)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Checkpoint224)5940_storage": {
            "label": "struct CheckpointsUpgradeable.Checkpoint224",
            "members": [
              {
                "label": "_key",
                "type": "t_uint32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_value",
                "type": "t_uint224",
                "offset": 4,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Counter)6983_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Trace224)5935_storage": {
            "label": "struct CheckpointsUpgradeable.Trace224",
            "members": [
              {
                "label": "_checkpoints",
                "type": "t_array(t_struct(Checkpoint224)5940_storage)dyn_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint224": {
            "label": "uint224",
            "numberOfBytes": "28"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "d15fbd2b456d624093ab8abc536af14611002824b64bcd699cb6d8188cb84252": {
      "address": "0xaA52005B90ea3aa9950e595cDca2803eADdC2db7",
      "txHash": "0xbffd7a64d175b41107bbaaeed276988fcf78c9bf30e8f483725ccfafbac4a020",
      "layout": {
        "solcVersion": "0.8.15",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "ACCESS_CONTROL_SINGLETON",
            "offset": 0,
            "slot": "51",
            "type": "t_contract(ISuAccessControl)30579",
            "contract": "SuAccessControlAuthenticated",
            "src": "contracts/access-control/SuAccessControlAuthenticated.sol:20"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "SuAccessControlAuthenticated",
            "src": "contracts/access-control/SuAccessControlAuthenticated.sol:54"
          },
          {
            "label": "VE_ERC_20",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IveERC20v2)30877",
            "contract": "SuDAOUpgrader",
            "src": "contracts/distributions/SuDAOUpgrader.sol:28"
          },
          {
            "label": "SU_DAO",
            "offset": 0,
            "slot": "102",
            "type": "t_contract(IERC20Upgradeable)2100",
            "contract": "SuDAOUpgrader",
            "src": "contracts/distributions/SuDAOUpgrader.sol:29"
          },
          {
            "label": "SU_DAO_OLD",
            "offset": 0,
            "slot": "103",
            "type": "t_contract(IERC20Upgradeable)2100",
            "contract": "SuDAOUpgrader",
            "src": "contracts/distributions/SuDAOUpgrader.sol:30"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "104",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SuDAOUpgrader",
            "src": "contracts/distributions/SuDAOUpgrader.sol:72"
          }
        ],
        "types": {
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20Upgradeable)2100": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(ISuAccessControl)30579": {
            "label": "contract ISuAccessControl",
            "numberOfBytes": "20"
          },
          "t_contract(IveERC20v2)30877": {
            "label": "contract IveERC20v2",
            "numberOfBytes": "20"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
