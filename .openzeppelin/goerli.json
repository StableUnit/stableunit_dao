{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0xB2ef53b8119d1a698aFD43f6813144E5ACFa0951",
    "txHash": "0x88eca577bb150e8d081f4b1037441ab1ba3726ae6cd413d52f694e78182fe660"
  },
  "proxies": [
    {
      "address": "0xdb3E4B51C30A38Ac5944F7c2CAF4302C6f55480A",
      "txHash": "0xd94b3c37ad3fd0badf9b950e921f7883daa5b80e2a3e626ba4e4b92501aa1995",
      "kind": "transparent"
    },
    {
      "address": "0x666666679eb68ffef7244859a2016B0D28664998",
      "txHash": "0x1445a9b6cc75c088a0e0d70c2987f86d2e3e2194d237c3f3c0c95d2f8b7edf19",
      "kind": "transparent"
    },
    {
      "address": "0x555555ABe05BE44e1e70DB3206f0b71B1082de2f",
      "txHash": "0x107a7f6dce61c69db930d3641922ce3e2454fc3a8a1b8811eaa4e32de7d595cf",
      "kind": "transparent"
    },
    {
      "address": "0xfD37BfCeAD2ccf73b7b1A5e5f7FE123Ec95CfED4",
      "txHash": "0x94e4fb26d46f97a0b1e4a3f983d9a112f6c4b2d8ae19bcf7c64db678bd71d39e",
      "kind": "transparent"
    },
    {
      "address": "0x04207C3D48Bf1659e77C64E5FDa6fE2eab19E50e",
      "txHash": "0xd0c9d934e878853b000fdae93e5768e48b749778aedc3abf6b2200386225ee8c",
      "kind": "transparent"
    },
    {
      "address": "0x97eaA69F210426eaC3A391d6d4377cfe85443494",
      "txHash": "0x6b0d766460f6fa12da67f288dd36e5b6c646070ee26599a9082820f01aed71c8",
      "kind": "transparent"
    },
    {
      "address": "0xb1C11Ab94d0756136926524F72e0503CaD438723",
      "txHash": "0x63c7384d7af5bbf13c02c364495e3c12ed02f8d07504595a997b31b3e24898ac",
      "kind": "transparent"
    }
  ],
  "impls": {
    "dd4241cea4be15d36b2c51d945f12fb1553af981e3e679e0d8a8e7e2bd1624cd": {
      "address": "0x30D7386E745017953De7a32339913aE20BB180f0",
      "txHash": "0x8706ede4427258339225f44f5d9d8dcf5a4b60fdda295319ae518e2833206214",
      "layout": {
        "solcVersion": "0.8.15",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "854f0480fe8f23045b6b807e126e0b3ee6279ad20ee3919b58b23c7f027ec0c4": {
      "address": "0x866548d946CDE3Af0a2b0C2D273e4616502677Df",
      "txHash": "0x93f53cdfc94c9f4bdfc6893a7740635872da2c3544d0c493c784dbff0ba2bb3f",
      "layout": {
        "solcVersion": "0.8.15",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "ACCESS_CONTROL_SINGLETON",
            "offset": 0,
            "slot": "51",
            "type": "t_contract(ISuAccessControl)30579",
            "contract": "SuAccessControlAuthenticated",
            "src": "contracts/access-control/SuAccessControlAuthenticated.sol:20"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "SuAccessControlAuthenticated",
            "src": "contracts/access-control/SuAccessControlAuthenticated.sol:54"
          },
          {
            "label": "_hashedName",
            "offset": 0,
            "slot": "101",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:40",
            "renamedFrom": "_HASHED_NAME"
          },
          {
            "label": "_hashedVersion",
            "offset": 0,
            "slot": "102",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:42",
            "renamedFrom": "_HASHED_VERSION"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "103",
            "type": "t_string_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:44"
          },
          {
            "label": "_version",
            "offset": 0,
            "slot": "104",
            "type": "t_string_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:45"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "105",
            "type": "t_array(t_uint256)48_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:204"
          },
          {
            "label": "_delegation",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_address)",
            "contract": "VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/utils/VotesUpgradeable.sol:44"
          },
          {
            "label": "_delegateCheckpoints",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_struct(Trace224)5935_storage)",
            "contract": "VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/utils/VotesUpgradeable.sol:47",
            "retypedFrom": "mapping(address => Checkpoints.History)"
          },
          {
            "label": "_totalCheckpoints",
            "offset": 0,
            "slot": "155",
            "type": "t_struct(Trace224)5935_storage",
            "contract": "VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/utils/VotesUpgradeable.sol:50",
            "retypedFrom": "Checkpoints.History"
          },
          {
            "label": "_nonces",
            "offset": 0,
            "slot": "156",
            "type": "t_mapping(t_address,t_struct(Counter)6983_storage)",
            "contract": "VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/utils/VotesUpgradeable.sol:52"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "157",
            "type": "t_array(t_uint256)46_storage",
            "contract": "VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/utils/VotesUpgradeable.sol:256"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "205",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "206",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "207",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "208",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "LOCKED_TOKEN",
            "offset": 0,
            "slot": "253",
            "type": "t_contract(ERC20BurnableUpgradeable)2164",
            "contract": "VeERC20v2",
            "src": "contracts/vested-escrow/VeERC20v2.sol:40"
          },
          {
            "label": "tgeTimestamp",
            "offset": 20,
            "slot": "253",
            "type": "t_uint32",
            "contract": "VeERC20v2",
            "src": "contracts/vested-escrow/VeERC20v2.sol:41"
          },
          {
            "label": "tgeUnlockRatio1e18",
            "offset": 24,
            "slot": "253",
            "type": "t_uint64",
            "contract": "VeERC20v2",
            "src": "contracts/vested-escrow/VeERC20v2.sol:45"
          },
          {
            "label": "cliffSeconds",
            "offset": 0,
            "slot": "254",
            "type": "t_uint32",
            "contract": "VeERC20v2",
            "src": "contracts/vested-escrow/VeERC20v2.sol:48"
          },
          {
            "label": "vestingSeconds",
            "offset": 4,
            "slot": "254",
            "type": "t_uint32",
            "contract": "VeERC20v2",
            "src": "contracts/vested-escrow/VeERC20v2.sol:51"
          },
          {
            "label": "vestingFrequencySeconds",
            "offset": 8,
            "slot": "254",
            "type": "t_uint32",
            "contract": "VeERC20v2",
            "src": "contracts/vested-escrow/VeERC20v2.sol:54"
          },
          {
            "label": "alreadyWithdrawn",
            "offset": 0,
            "slot": "255",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VeERC20v2",
            "src": "contracts/vested-escrow/VeERC20v2.sol:56"
          },
          {
            "label": "isTransferable",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "VeERC20v2",
            "src": "contracts/vested-escrow/VeERC20v2.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "257",
            "type": "t_array(t_uint256)49_storage",
            "contract": "VeERC20v2",
            "src": "contracts/vested-escrow/VeERC20v2.sol:226"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Checkpoint224)5940_storage)dyn_storage": {
            "label": "struct CheckpointsUpgradeable.Checkpoint224[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ERC20BurnableUpgradeable)2164": {
            "label": "contract ERC20BurnableUpgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(ISuAccessControl)30579": {
            "label": "contract ISuAccessControl",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Counter)6983_storage)": {
            "label": "mapping(address => struct CountersUpgradeable.Counter)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Trace224)5935_storage)": {
            "label": "mapping(address => struct CheckpointsUpgradeable.Trace224)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Checkpoint224)5940_storage": {
            "label": "struct CheckpointsUpgradeable.Checkpoint224",
            "members": [
              {
                "label": "_key",
                "type": "t_uint32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_value",
                "type": "t_uint224",
                "offset": 4,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Counter)6983_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Trace224)5935_storage": {
            "label": "struct CheckpointsUpgradeable.Trace224",
            "members": [
              {
                "label": "_checkpoints",
                "type": "t_array(t_struct(Checkpoint224)5940_storage)dyn_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint224": {
            "label": "uint224",
            "numberOfBytes": "28"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "d15fbd2b456d624093ab8abc536af14611002824b64bcd699cb6d8188cb84252": {
      "address": "0xaA52005B90ea3aa9950e595cDca2803eADdC2db7",
      "txHash": "0xbffd7a64d175b41107bbaaeed276988fcf78c9bf30e8f483725ccfafbac4a020",
      "layout": {
        "solcVersion": "0.8.15",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "ACCESS_CONTROL_SINGLETON",
            "offset": 0,
            "slot": "51",
            "type": "t_contract(ISuAccessControl)30579",
            "contract": "SuAccessControlAuthenticated",
            "src": "contracts/access-control/SuAccessControlAuthenticated.sol:20"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "SuAccessControlAuthenticated",
            "src": "contracts/access-control/SuAccessControlAuthenticated.sol:54"
          },
          {
            "label": "VE_ERC_20",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IveERC20v2)30877",
            "contract": "SuDAOUpgrader",
            "src": "contracts/distributions/SuDAOUpgrader.sol:28"
          },
          {
            "label": "SU_DAO",
            "offset": 0,
            "slot": "102",
            "type": "t_contract(IERC20Upgradeable)2100",
            "contract": "SuDAOUpgrader",
            "src": "contracts/distributions/SuDAOUpgrader.sol:29"
          },
          {
            "label": "SU_DAO_OLD",
            "offset": 0,
            "slot": "103",
            "type": "t_contract(IERC20Upgradeable)2100",
            "contract": "SuDAOUpgrader",
            "src": "contracts/distributions/SuDAOUpgrader.sol:30"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "104",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SuDAOUpgrader",
            "src": "contracts/distributions/SuDAOUpgrader.sol:72"
          }
        ],
        "types": {
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20Upgradeable)2100": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(ISuAccessControl)30579": {
            "label": "contract ISuAccessControl",
            "numberOfBytes": "20"
          },
          "t_contract(IveERC20v2)30877": {
            "label": "contract IveERC20v2",
            "numberOfBytes": "20"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "110abaa7248a8e796901b5fee8eb4e3a39dcfbf7e9f2307f10f68c5e74cd9f97": {
      "address": "0x708071C080E5ceb3cc0fb8fb4fD1034766eAef24",
      "txHash": "0xc36e49ca97bb9c579fd77bfb1b71693129c5fadb958933bd8e7a1ef0bbe26f95",
      "layout": {
        "solcVersion": "0.8.15",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "lzEndpoint",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(ILayerZeroEndpointUpgradeable)6731",
            "contract": "LzAppUpgradeable",
            "src": "contracts/3rd-party/layer-zero-labs/contracts-upgradable/lzApp/LzAppUpgradeable.sol:20"
          },
          {
            "label": "trustedRemoteLookup",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_uint16,t_bytes_storage)",
            "contract": "LzAppUpgradeable",
            "src": "contracts/3rd-party/layer-zero-labs/contracts-upgradable/lzApp/LzAppUpgradeable.sol:21"
          },
          {
            "label": "minDstGasLookup",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint16,t_mapping(t_uint16,t_uint256))",
            "contract": "LzAppUpgradeable",
            "src": "contracts/3rd-party/layer-zero-labs/contracts-upgradable/lzApp/LzAppUpgradeable.sol:22"
          },
          {
            "label": "payloadSizeLimitLookup",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_uint16,t_uint256)",
            "contract": "LzAppUpgradeable",
            "src": "contracts/3rd-party/layer-zero-labs/contracts-upgradable/lzApp/LzAppUpgradeable.sol:23"
          },
          {
            "label": "precrime",
            "offset": 0,
            "slot": "105",
            "type": "t_address",
            "contract": "LzAppUpgradeable",
            "src": "contracts/3rd-party/layer-zero-labs/contracts-upgradable/lzApp/LzAppUpgradeable.sol:24"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "106",
            "type": "t_array(t_uint256)45_storage",
            "contract": "LzAppUpgradeable",
            "src": "contracts/3rd-party/layer-zero-labs/contracts-upgradable/lzApp/LzAppUpgradeable.sol:150"
          },
          {
            "label": "failedMessages",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))",
            "contract": "NonblockingLzAppUpgradeable",
            "src": "contracts/3rd-party/layer-zero-labs/contracts-upgradable/lzApp/NonblockingLzAppUpgradeable.sol:23"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "NonblockingLzAppUpgradeable",
            "src": "contracts/3rd-party/layer-zero-labs/contracts-upgradable/lzApp/NonblockingLzAppUpgradeable.sol:68"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "203",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "204",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "205",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "206",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:400"
          },
          {
            "label": "_HASHED_NAME",
            "offset": 0,
            "slot": "251",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:32"
          },
          {
            "label": "_HASHED_VERSION",
            "offset": 0,
            "slot": "252",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)50_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:120"
          },
          {
            "label": "_nonces",
            "offset": 0,
            "slot": "303",
            "type": "t_mapping(t_address,t_struct(Counter)2714_storage)",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:28"
          },
          {
            "label": "_PERMIT_TYPEHASH_DEPRECATED_SLOT",
            "offset": 0,
            "slot": "304",
            "type": "t_bytes32",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:40",
            "renamedFrom": "_PERMIT_TYPEHASH"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "305",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:108"
          },
          {
            "label": "_delegates",
            "offset": 0,
            "slot": "354",
            "type": "t_mapping(t_address,t_address)",
            "contract": "ERC20VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:42"
          },
          {
            "label": "_checkpoints",
            "offset": 0,
            "slot": "355",
            "type": "t_mapping(t_address,t_array(t_struct(Checkpoint)1164_storage)dyn_storage)",
            "contract": "ERC20VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:43"
          },
          {
            "label": "_totalSupplyCheckpoints",
            "offset": 0,
            "slot": "356",
            "type": "t_array(t_struct(Checkpoint)1164_storage)dyn_storage",
            "contract": "ERC20VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "357",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC20VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:284"
          },
          {
            "label": "ACCESS_CONTROL_SINGLETON",
            "offset": 0,
            "slot": "404",
            "type": "t_contract(ISuAccessControl)8518",
            "contract": "SuAccessControlAuthenticated",
            "src": "contracts/access-control/SuAccessControlAuthenticated.sol:20"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "405",
            "type": "t_array(t_uint256)49_storage",
            "contract": "SuAccessControlAuthenticated",
            "src": "contracts/access-control/SuAccessControlAuthenticated.sol:54"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "454",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC20BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:51"
          },
          {
            "label": "destChainId",
            "offset": 0,
            "slot": "504",
            "type": "t_uint16",
            "contract": "CrossChainToken",
            "src": "contracts/cross-chain/CrossChainToken.sol:19"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "505",
            "type": "t_array(t_uint256)49_storage",
            "contract": "SomeTokenDAO",
            "src": "contracts/SomeTokenDAO.sol:73"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Checkpoint)1164_storage)dyn_storage": {
            "label": "struct ERC20VotesUpgradeable.Checkpoint[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_memory_ptr": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(ILayerZeroEndpointUpgradeable)6731": {
            "label": "contract ILayerZeroEndpointUpgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(ISuAccessControl)8518": {
            "label": "contract ISuAccessControl",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_struct(Checkpoint)1164_storage)dyn_storage)": {
            "label": "mapping(address => struct ERC20VotesUpgradeable.Checkpoint[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Counter)2714_storage)": {
            "label": "mapping(address => struct CountersUpgradeable.Counter)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32))": {
            "label": "mapping(bytes => mapping(uint64 => bytes32))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint16,t_bytes_storage)": {
            "label": "mapping(uint16 => bytes)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))": {
            "label": "mapping(uint16 => mapping(bytes => mapping(uint64 => bytes32)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint16,t_mapping(t_uint16,t_uint256))": {
            "label": "mapping(uint16 => mapping(uint16 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint16,t_uint256)": {
            "label": "mapping(uint16 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint64,t_bytes32)": {
            "label": "mapping(uint64 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Checkpoint)1164_storage": {
            "label": "struct ERC20VotesUpgradeable.Checkpoint",
            "members": [
              {
                "label": "fromBlock",
                "type": "t_uint32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "votes",
                "type": "t_uint224",
                "offset": 4,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Counter)2714_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint224": {
            "label": "uint224",
            "numberOfBytes": "28"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "c51c9164d7c07cbf17e75efaabc8151d549bbe7b02e908e4cfc03d059900960b": {
      "address": "0xDF2e747Ae22Ea80B5f6C8f8BA8FDC2FAAC996762",
      "txHash": "0x64e6fe0c326ae120047e719f9de86a8bd6559e9aa32dc02a2eac563c68ab6a0c",
      "layout": {
        "solcVersion": "0.8.15",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "lzEndpoint",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(ILayerZeroEndpointUpgradeable)6731",
            "contract": "LzAppUpgradeable",
            "src": "contracts/3rd-party/layer-zero-labs/contracts-upgradable/lzApp/LzAppUpgradeable.sol:20"
          },
          {
            "label": "trustedRemoteLookup",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_uint16,t_bytes_storage)",
            "contract": "LzAppUpgradeable",
            "src": "contracts/3rd-party/layer-zero-labs/contracts-upgradable/lzApp/LzAppUpgradeable.sol:21"
          },
          {
            "label": "minDstGasLookup",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint16,t_mapping(t_uint16,t_uint256))",
            "contract": "LzAppUpgradeable",
            "src": "contracts/3rd-party/layer-zero-labs/contracts-upgradable/lzApp/LzAppUpgradeable.sol:22"
          },
          {
            "label": "payloadSizeLimitLookup",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_uint16,t_uint256)",
            "contract": "LzAppUpgradeable",
            "src": "contracts/3rd-party/layer-zero-labs/contracts-upgradable/lzApp/LzAppUpgradeable.sol:23"
          },
          {
            "label": "precrime",
            "offset": 0,
            "slot": "105",
            "type": "t_address",
            "contract": "LzAppUpgradeable",
            "src": "contracts/3rd-party/layer-zero-labs/contracts-upgradable/lzApp/LzAppUpgradeable.sol:24"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "106",
            "type": "t_array(t_uint256)45_storage",
            "contract": "LzAppUpgradeable",
            "src": "contracts/3rd-party/layer-zero-labs/contracts-upgradable/lzApp/LzAppUpgradeable.sol:150"
          },
          {
            "label": "failedMessages",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))",
            "contract": "NonblockingLzAppUpgradeable",
            "src": "contracts/3rd-party/layer-zero-labs/contracts-upgradable/lzApp/NonblockingLzAppUpgradeable.sol:23"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "NonblockingLzAppUpgradeable",
            "src": "contracts/3rd-party/layer-zero-labs/contracts-upgradable/lzApp/NonblockingLzAppUpgradeable.sol:68"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "203",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "204",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "205",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "206",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:400"
          },
          {
            "label": "_HASHED_NAME",
            "offset": 0,
            "slot": "251",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:32"
          },
          {
            "label": "_HASHED_VERSION",
            "offset": 0,
            "slot": "252",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)50_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:120"
          },
          {
            "label": "_nonces",
            "offset": 0,
            "slot": "303",
            "type": "t_mapping(t_address,t_struct(Counter)2714_storage)",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:28"
          },
          {
            "label": "_PERMIT_TYPEHASH_DEPRECATED_SLOT",
            "offset": 0,
            "slot": "304",
            "type": "t_bytes32",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:40",
            "renamedFrom": "_PERMIT_TYPEHASH"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "305",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:108"
          },
          {
            "label": "_delegates",
            "offset": 0,
            "slot": "354",
            "type": "t_mapping(t_address,t_address)",
            "contract": "ERC20VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:42"
          },
          {
            "label": "_checkpoints",
            "offset": 0,
            "slot": "355",
            "type": "t_mapping(t_address,t_array(t_struct(Checkpoint)1164_storage)dyn_storage)",
            "contract": "ERC20VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:43"
          },
          {
            "label": "_totalSupplyCheckpoints",
            "offset": 0,
            "slot": "356",
            "type": "t_array(t_struct(Checkpoint)1164_storage)dyn_storage",
            "contract": "ERC20VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "357",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC20VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:284"
          },
          {
            "label": "ACCESS_CONTROL_SINGLETON",
            "offset": 0,
            "slot": "404",
            "type": "t_contract(ISuAccessControl)8522",
            "contract": "SuAccessControlAuthenticated",
            "src": "contracts/access-control/SuAccessControlAuthenticated.sol:20"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "405",
            "type": "t_array(t_uint256)49_storage",
            "contract": "SuAccessControlAuthenticated",
            "src": "contracts/access-control/SuAccessControlAuthenticated.sol:54"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "454",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC20BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:51"
          },
          {
            "label": "destChainId",
            "offset": 0,
            "slot": "504",
            "type": "t_uint16",
            "contract": "CrossChainToken",
            "src": "contracts/cross-chain/CrossChainToken.sol:19"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "505",
            "type": "t_array(t_uint256)49_storage",
            "contract": "SomeTokenDAO",
            "src": "contracts/SomeTokenDAO.sol:73"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Checkpoint)1164_storage)dyn_storage": {
            "label": "struct ERC20VotesUpgradeable.Checkpoint[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_memory_ptr": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(ILayerZeroEndpointUpgradeable)6731": {
            "label": "contract ILayerZeroEndpointUpgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(ISuAccessControl)8522": {
            "label": "contract ISuAccessControl",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_struct(Checkpoint)1164_storage)dyn_storage)": {
            "label": "mapping(address => struct ERC20VotesUpgradeable.Checkpoint[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Counter)2714_storage)": {
            "label": "mapping(address => struct CountersUpgradeable.Counter)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32))": {
            "label": "mapping(bytes => mapping(uint64 => bytes32))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint16,t_bytes_storage)": {
            "label": "mapping(uint16 => bytes)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))": {
            "label": "mapping(uint16 => mapping(bytes => mapping(uint64 => bytes32)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint16,t_mapping(t_uint16,t_uint256))": {
            "label": "mapping(uint16 => mapping(uint16 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint16,t_uint256)": {
            "label": "mapping(uint16 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint64,t_bytes32)": {
            "label": "mapping(uint64 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Checkpoint)1164_storage": {
            "label": "struct ERC20VotesUpgradeable.Checkpoint",
            "members": [
              {
                "label": "fromBlock",
                "type": "t_uint32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "votes",
                "type": "t_uint224",
                "offset": 4,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Counter)2714_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint224": {
            "label": "uint224",
            "numberOfBytes": "28"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "17d1086b32e90010ac540109c05fedd32929ee708bf103fa7b2f0fbfea488241": {
      "address": "0x5A73d6bfd9278C397aAf7bC0D117F4d7416d4E7d",
      "txHash": "0xe1a2686451fbab3fd4d3a888a0a39901971d091654b47008d32e6b9564a80484",
      "layout": {
        "solcVersion": "0.8.23",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "lzEndpoint",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(ILayerZeroEndpointUpgradeable)7690",
            "contract": "LzAppUpgradeable",
            "src": "contracts/3rd-party/layer-zero-labs/contracts-upgradable/lzApp/LzAppUpgradeable.sol:20"
          },
          {
            "label": "trustedRemoteLookup",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_uint16,t_bytes_storage)",
            "contract": "LzAppUpgradeable",
            "src": "contracts/3rd-party/layer-zero-labs/contracts-upgradable/lzApp/LzAppUpgradeable.sol:21"
          },
          {
            "label": "minDstGasLookup",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint16,t_mapping(t_uint16,t_uint256))",
            "contract": "LzAppUpgradeable",
            "src": "contracts/3rd-party/layer-zero-labs/contracts-upgradable/lzApp/LzAppUpgradeable.sol:22"
          },
          {
            "label": "payloadSizeLimitLookup",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_uint16,t_uint256)",
            "contract": "LzAppUpgradeable",
            "src": "contracts/3rd-party/layer-zero-labs/contracts-upgradable/lzApp/LzAppUpgradeable.sol:23"
          },
          {
            "label": "precrime",
            "offset": 0,
            "slot": "105",
            "type": "t_address",
            "contract": "LzAppUpgradeable",
            "src": "contracts/3rd-party/layer-zero-labs/contracts-upgradable/lzApp/LzAppUpgradeable.sol:24"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "106",
            "type": "t_array(t_uint256)45_storage",
            "contract": "LzAppUpgradeable",
            "src": "contracts/3rd-party/layer-zero-labs/contracts-upgradable/lzApp/LzAppUpgradeable.sol:150"
          },
          {
            "label": "failedMessages",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))",
            "contract": "NonblockingLzAppUpgradeable",
            "src": "contracts/3rd-party/layer-zero-labs/contracts-upgradable/lzApp/NonblockingLzAppUpgradeable.sol:23"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "NonblockingLzAppUpgradeable",
            "src": "contracts/3rd-party/layer-zero-labs/contracts-upgradable/lzApp/NonblockingLzAppUpgradeable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "251",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "252",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "253",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "255",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "257",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:477"
          },
          {
            "label": "minGasToTransferAndStore",
            "offset": 0,
            "slot": "301",
            "type": "t_uint256",
            "contract": "ONFT721CoreUpgradeable",
            "src": "contracts/3rd-party/layer-zero-labs/contracts-upgradable/token/onft/ERC721/ONFT721CoreUpgradeable.sol:19"
          },
          {
            "label": "dstChainIdToBatchLimit",
            "offset": 0,
            "slot": "302",
            "type": "t_mapping(t_uint16,t_uint256)",
            "contract": "ONFT721CoreUpgradeable",
            "src": "contracts/3rd-party/layer-zero-labs/contracts-upgradable/token/onft/ERC721/ONFT721CoreUpgradeable.sol:20"
          },
          {
            "label": "dstChainIdToTransferGas",
            "offset": 0,
            "slot": "303",
            "type": "t_mapping(t_uint16,t_uint256)",
            "contract": "ONFT721CoreUpgradeable",
            "src": "contracts/3rd-party/layer-zero-labs/contracts-upgradable/token/onft/ERC721/ONFT721CoreUpgradeable.sol:21"
          },
          {
            "label": "storedCredits",
            "offset": 0,
            "slot": "304",
            "type": "t_mapping(t_bytes32,t_struct(StoredCredit)8711_storage)",
            "contract": "ONFT721CoreUpgradeable",
            "src": "contracts/3rd-party/layer-zero-labs/contracts-upgradable/token/onft/ERC721/ONFT721CoreUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "305",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ONFT721CoreUpgradeable",
            "src": "contracts/3rd-party/layer-zero-labs/contracts-upgradable/token/onft/ERC721/ONFT721CoreUpgradeable.sol:166"
          },
          {
            "label": "_hashedName",
            "offset": 0,
            "slot": "351",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:40",
            "renamedFrom": "_HASHED_NAME"
          },
          {
            "label": "_hashedVersion",
            "offset": 0,
            "slot": "352",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:42",
            "renamedFrom": "_HASHED_VERSION"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "353",
            "type": "t_string_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:44"
          },
          {
            "label": "_version",
            "offset": 0,
            "slot": "354",
            "type": "t_string_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:45"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "355",
            "type": "t_array(t_uint256)48_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:204"
          },
          {
            "label": "_delegation",
            "offset": 0,
            "slot": "403",
            "type": "t_mapping(t_address,t_address)",
            "contract": "VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/utils/VotesUpgradeable.sol:44"
          },
          {
            "label": "_delegateCheckpoints",
            "offset": 0,
            "slot": "404",
            "type": "t_mapping(t_address,t_struct(Trace224)2982_storage)",
            "contract": "VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/utils/VotesUpgradeable.sol:47",
            "retypedFrom": "mapping(address => Checkpoints.History)"
          },
          {
            "label": "_totalCheckpoints",
            "offset": 0,
            "slot": "405",
            "type": "t_struct(Trace224)2982_storage",
            "contract": "VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/utils/VotesUpgradeable.sol:50",
            "retypedFrom": "Checkpoints.History"
          },
          {
            "label": "_nonces",
            "offset": 0,
            "slot": "406",
            "type": "t_mapping(t_address,t_struct(Counter)4030_storage)",
            "contract": "VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/utils/VotesUpgradeable.sol:52"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "407",
            "type": "t_array(t_uint256)46_storage",
            "contract": "VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/utils/VotesUpgradeable.sol:256"
          },
          {
            "label": "baseURI",
            "offset": 0,
            "slot": "453",
            "type": "t_string_storage",
            "contract": "MockErc721CrossChainV2",
            "src": "contracts/mocks/MockErc721CrossChainV2.sol:37"
          },
          {
            "label": "hasMinted",
            "offset": 0,
            "slot": "454",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "MockErc721CrossChainV2",
            "src": "contracts/mocks/MockErc721CrossChainV2.sol:38"
          },
          {
            "label": "nextMintId",
            "offset": 0,
            "slot": "455",
            "type": "t_uint256",
            "contract": "MockErc721CrossChainV2",
            "src": "contracts/mocks/MockErc721CrossChainV2.sol:39"
          },
          {
            "label": "maxMintId",
            "offset": 0,
            "slot": "456",
            "type": "t_uint256",
            "contract": "MockErc721CrossChainV2",
            "src": "contracts/mocks/MockErc721CrossChainV2.sol:40"
          },
          {
            "label": "backendSigner",
            "offset": 0,
            "slot": "457",
            "type": "t_address",
            "contract": "MockErc721CrossChainV2",
            "src": "contracts/mocks/MockErc721CrossChainV2.sol:41"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Checkpoint224)2987_storage)dyn_storage": {
            "label": "struct CheckpointsUpgradeable.Checkpoint224[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_memory_ptr": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(ILayerZeroEndpointUpgradeable)7690": {
            "label": "contract ILayerZeroEndpointUpgradeable",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Counter)4030_storage)": {
            "label": "mapping(address => struct CountersUpgradeable.Counter)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Trace224)2982_storage)": {
            "label": "mapping(address => struct CheckpointsUpgradeable.Trace224)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(StoredCredit)8711_storage)": {
            "label": "mapping(bytes32 => struct ONFT721CoreUpgradeable.StoredCredit)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32))": {
            "label": "mapping(bytes => mapping(uint64 => bytes32))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint16,t_bytes_storage)": {
            "label": "mapping(uint16 => bytes)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint16,t_mapping(t_bytes_memory_ptr,t_mapping(t_uint64,t_bytes32)))": {
            "label": "mapping(uint16 => mapping(bytes => mapping(uint64 => bytes32)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint16,t_mapping(t_uint16,t_uint256))": {
            "label": "mapping(uint16 => mapping(uint16 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint16,t_uint256)": {
            "label": "mapping(uint16 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint64,t_bytes32)": {
            "label": "mapping(uint64 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Checkpoint224)2987_storage": {
            "label": "struct CheckpointsUpgradeable.Checkpoint224",
            "members": [
              {
                "label": "_key",
                "type": "t_uint32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_value",
                "type": "t_uint224",
                "offset": 4,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Counter)4030_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(StoredCredit)8711_storage": {
            "label": "struct ONFT721CoreUpgradeable.StoredCredit",
            "members": [
              {
                "label": "srcChainId",
                "type": "t_uint16",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "toAddress",
                "type": "t_address",
                "offset": 2,
                "slot": "0"
              },
              {
                "label": "index",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "creditsRemain",
                "type": "t_bool",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(Trace224)2982_storage": {
            "label": "struct CheckpointsUpgradeable.Trace224",
            "members": [
              {
                "label": "_checkpoints",
                "type": "t_array(t_struct(Checkpoint224)2987_storage)dyn_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint224": {
            "label": "uint224",
            "numberOfBytes": "28"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    }
  }
}
