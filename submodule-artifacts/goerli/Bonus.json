{
  "address": "0x5dA2E77a483dAbFd9988B6aa287034054d9259F0",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "msgSender",
          "type": "address"
        }
      ],
      "name": "OnlyRoleError",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "ACCESS_CONTROL_SINGLETON",
      "outputs": [
        {
          "internalType": "contract ISuAccessControl",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "COMMUNITY_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "DAO_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "adminInfo",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isAdmin",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "communityAdminInfo",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "xpLimit",
          "type": "uint256"
        },
        {
          "internalType": "uint16",
          "name": "levelLimit",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "xp",
          "type": "uint256"
        }
      ],
      "name": "distributeXp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "getAllocation",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "getBonus",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "getLevel",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "nft",
          "type": "address"
        }
      ],
      "name": "getNftAllocation",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "nft",
          "type": "address"
        }
      ],
      "name": "getNftBonus",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_accessControlSingleton",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "nft",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "isTokenTransferable",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "nftInfo",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "allocation",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "donationBonusRatio",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "admin",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "isAdmin",
          "type": "bool"
        }
      ],
      "name": "setAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "communityAdmin",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "xpLimit",
          "type": "uint256"
        },
        {
          "internalType": "uint16",
          "name": "levelLimit",
          "type": "uint16"
        }
      ],
      "name": "setCommunityAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "nft",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "allocation",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "donationBonusRatio",
          "type": "uint256"
        }
      ],
      "name": "setNftInfo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "allocation",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "donationBonusRatio",
          "type": "uint256"
        }
      ],
      "name": "setUserInfo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "userInfo",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "xp",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "allocation",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "donationBonusRatio",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "numDeployments": 1,
  "solcInputHash": "f758b7a0534974279b090d6789581c7e",
  "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"}],\"name\":\"OnlyRoleError\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ACCESS_CONTROL_SINGLETON\",\"outputs\":[{\"internalType\":\"contract ISuAccessControl\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"COMMUNITY_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DAO_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"adminInfo\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isAdmin\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"communityAdminInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"xpLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"levelLimit\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"xp\",\"type\":\"uint256\"}],\"name\":\"distributeXp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getAllocation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getBonus\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getLevel\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nft\",\"type\":\"address\"}],\"name\":\"getNftAllocation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nft\",\"type\":\"address\"}],\"name\":\"getNftBonus\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_accessControlSingleton\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nft\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"isTokenTransferable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nftInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"allocation\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"donationBonusRatio\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isAdmin\",\"type\":\"bool\"}],\"name\":\"setAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"communityAdmin\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"xpLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"levelLimit\",\"type\":\"uint16\"}],\"name\":\"setCommunityAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nft\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allocation\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"donationBonusRatio\",\"type\":\"uint256\"}],\"name\":\"setNftInfo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allocation\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"donationBonusRatio\",\"type\":\"uint256\"}],\"name\":\"setUserInfo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"xp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"allocation\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"donationBonusRatio\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"distributeXp(address,uint256)\":{\"notice\":\"Admin can give xp points to user `user` Address of user `xp` The amount of XP that admin want to give user (xp <= admin.xpLimit && levelAfter(user) <= admin.levelLimit)*\"},\"getAllocation(address)\":{\"notice\":\"Get user allocation `user` Address of user*\"},\"getBonus(address)\":{\"notice\":\"Get user bonus reward for donation `user` Address of user*\"},\"getLevel(address)\":{\"notice\":\"Get user level according to constant distribution. Max value: 65535 `user` Address of user*\"},\"getNftAllocation(address)\":{\"notice\":\"Get nft allocation `user` Address of user*\"},\"getNftBonus(address)\":{\"notice\":\"Get nft bonus reward for donation `user` Address of nft*\"},\"isTokenTransferable(address,address,address,uint256)\":{\"notice\":\"Returns true/false whether this NFT with tokenId tokens can be transfer\"},\"setAdmin(address,bool)\":{\"notice\":\"Add or remove new admin `isAdmin` Address of admin*\"},\"setNftInfo(address,uint256,uint256)\":{\"notice\":\"Set allocation and donationBonusRatio for NFT `isAdmin` Address of admin*\"},\"setUserInfo(address,uint256,uint256)\":{\"notice\":\"Set allocation and donationBonusRatio for user `isAdmin` Address of admin*\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Bonus.sol\":\"Bonus\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts. Equivalent to `reinitializer(1)`.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * `initializer` is equivalent to `reinitializer(1)`, so a reinitializer may be used after the original\\n     * initialization step. This is essential to configure modules that are added through upgrades and that require\\n     * initialization.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized < type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20Upgradeable {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\"},\"contracts/Bonus.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n/*\\n      /$$$$$$            /$$$$$$$   /$$$$$$   /$$$$$$\\n     /$$__  $$          | $$__  $$ /$$__  $$ /$$__  $$\\n    | $$  \\\\__/ /$$   /$$| $$  \\\\ $$| $$  \\\\ $$| $$  \\\\ $$\\n    |  $$$$$$ | $$  | $$| $$  | $$| $$$$$$$$| $$  | $$\\n     \\\\____  $$| $$  | $$| $$  | $$| $$__  $$| $$  | $$\\n     /$$  \\\\ $$| $$  | $$| $$  | $$| $$  | $$| $$  | $$\\n    |  $$$$$$/|  $$$$$$/| $$$$$$$/| $$  | $$|  $$$$$$/\\n     \\\\______/  \\\\______/ |_______/ |__/  |__/ \\\\______/\\n\\n*/\\nimport \\\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\\\";\\nimport \\\"./interfaces/IBonus.sol\\\";\\nimport \\\"./access-control/SuAccessControlAuthenticated.sol\\\";\\n\\ncontract Bonus is IBonus, SuAccessControlAuthenticated {\\n    mapping(address => NFTInfo) public nftInfo;\\n    mapping(address => UserInfo) public userInfo;\\n    mapping(address => CommunityAdminInfo) public communityAdminInfo;\\n    mapping(address => AdminInfo) public adminInfo;\\n\\n    function initialize(address _accessControlSingleton) public initializer {\\n        __SuAuthenticated_init(_accessControlSingleton);\\n    }\\n\\n    function _getLevelByXP(uint256 xp) internal pure returns (uint16) {\\n        if (xp < 1000) return 1;\\n        if (xp < 2000) return 2;\\n        if (xp < 3200) return 3;\\n        if (xp < 4600) return 4;\\n        if (xp < 6200) return 5;\\n        if (xp < 8000) return 6;\\n        if (xp < 10000) return 7;\\n        if (xp < 12200) return 8;\\n        if (xp < 14700) return 9;\\n\\n        if (xp < 17500) return 10;\\n        if (xp < 20600) return 11;\\n        if (xp < 24320) return 12;\\n        if (xp < 28784) return 13;\\n        if (xp < 34140) return 14;\\n        if (xp < 40567) return 15;\\n        if (xp < 48279) return 16;\\n        if (xp < 57533) return 17;\\n        if (xp < 68637) return 18;\\n        if (xp < 81961) return 19;\\n\\n        if (xp < 97949) return 20;\\n        if (xp < 117134) return 21;\\n        if (xp < 140156) return 22;\\n        if (xp < 167782) return 23;\\n        if (xp < 200933) return 24;\\n        if (xp < 240714) return 25;\\n        if (xp < 288451) return 26;\\n        if (xp < 345735) return 27;\\n        if (xp < 414475) return 28;\\n        if (xp < 496963) return 29;\\n\\n        if (xp < 595948) return 30;\\n        if (xp < 714730) return 31;\\n        if (xp < 857268) return 32;\\n        if (xp < 1028313) return 33;\\n        if (xp < 1233567) return 34;\\n        if (xp < 1479871) return 35;\\n        if (xp < 1775435) return 36;\\n        if (xp < 2130111) return 37;\\n        if (xp < 2555722) return 38;\\n        if (xp < 3066455) return 39;\\n\\n        if (xp < 3679334) return 40;\\n        if (xp < 4414788) return 41;\\n        if (xp < 5297332) return 42;\\n        if (xp < 6356384) return 43;\\n        if (xp < 7627246) return 44;\\n        if (xp < 9152280) return 45;\\n        if (xp < 10982320) return 46;\\n        if (xp < 13178368) return 47;\\n        if (xp < 15813625) return 48;\\n        if (xp < 18975933) return 49;\\n\\n        if (xp < 22770702) return 50;\\n        if (xp < 27324424) return 51;\\n        if (xp < 32788890) return 52;\\n        if (xp < 39346249) return 53;\\n        if (xp < 47215079) return 54;\\n        if (xp < 56657675) return 55;\\n        if (xp < 67988790) return 56;\\n        if (xp < 81586128) return 57;\\n        if (xp < 97902933) return 58;\\n        if (xp < 117483099) return 59;\\n\\n        if (xp < 140979298) return 60;\\n        if (xp < 169174736) return 61;\\n        if (xp < 203009261) return 62;\\n        if (xp < 243610691) return 63;\\n        if (xp < 292332407) return 64;\\n        if (xp < 350798466) return 65;\\n        if (xp < 420957736) return 66;\\n        if (xp < 505148860) return 67;\\n        if (xp < 606178208) return 68;\\n        if (xp < 727413425) return 69;\\n\\n        if (xp < 872895685) return 70;\\n        if (xp < 1047474397) return 71;\\n        if (xp < 1256968851) return 72;\\n        if (xp < 1508362195) return 73;\\n        if (xp < 1810034207) return 74;\\n        if (xp >= 1810034207) return 75;\\n\\n        return 1;\\n    }\\n\\n    function getLevel(address user) public view override returns (uint16) {\\n        return _getLevelByXP(userInfo[user].xp);\\n    }\\n\\n    function setAdmin(address admin, bool isAdmin) public onlyRole(DAO_ROLE) override {\\n        adminInfo[admin].isAdmin = isAdmin;\\n    }\\n\\n    function setCommunityAdmin(address communityAdmin, uint256 xpLimit, uint16 levelLimit) public override {\\n        require(adminInfo[msg.sender].isAdmin, \\\"Need admin rights\\\");\\n        communityAdminInfo[communityAdmin].xpLimit = xpLimit;\\n        communityAdminInfo[communityAdmin].levelLimit = levelLimit;\\n    }\\n\\n    function setNftInfo(address nft, uint256 allocation, uint256 donationBonusRatio) public override {\\n        require(adminInfo[msg.sender].isAdmin, \\\"Need admin rights\\\");\\n        nftInfo[nft].allocation = allocation;\\n        nftInfo[nft].donationBonusRatio = donationBonusRatio;\\n    }\\n\\n    function setUserInfo(address user, uint256 allocation, uint256 donationBonusRatio) public override {\\n        require(adminInfo[msg.sender].isAdmin, \\\"Need admin rights\\\");\\n        userInfo[user].allocation = allocation;\\n        userInfo[user].donationBonusRatio = donationBonusRatio;\\n    }\\n\\n    function distributeXp(address user, uint256 xp) public override {\\n        require(communityAdminInfo[msg.sender].levelLimit > 0, \\\"Need communityAdmin rights\\\");\\n        require(\\n            xp <= communityAdminInfo[msg.sender].xpLimit,\\n            \\\"XP to distribute shouldn't be more than admin xpLimit\\\"\\n        );\\n\\n        communityAdminInfo[msg.sender].xpLimit = communityAdminInfo[msg.sender].xpLimit - xp;\\n        userInfo[user].xp = userInfo[user].xp + xp;\\n\\n        uint16 newUserLevel = _getLevelByXP(userInfo[user].xp);\\n        require(\\n            newUserLevel <= communityAdminInfo[msg.sender].levelLimit,\\n            \\\"User level should be less than admin levelLimit\\\"\\n        );\\n    }\\n\\n    function getAllocation(address user) public view override returns (uint256) {\\n        return userInfo[user].allocation;\\n    }\\n\\n    function getNftAllocation(address nft) public view override returns (uint256) {\\n        return nftInfo[nft].allocation;\\n    }\\n\\n\\n    function getBonus(address user) public view override returns (uint256) {\\n        return userInfo[user].donationBonusRatio;\\n    }\\n\\n    function getNftBonus(address nft) public view override returns (uint256) {\\n        return nftInfo[nft].donationBonusRatio;\\n    }\\n\\n    /**\\n     * Returns true/false whether this NFT with tokenId tokens can be transfer\\n     */\\n    function isTokenTransferable(address nft, address from, address to, uint256 tokenId) external view returns (bool) {\\n        return false;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[45] private __gap;\\n}\\n\",\"keccak256\":\"0xc3b0cff6d9f27ed9d06c9bd574a73622e5e92b44d818341a794efb687926e767\",\"license\":\"MIT\"},\"contracts/access-control/SuAccessControlAuthenticated.sol\":{\"content\":\"// SPDX-License-Identifier: BSL 1.1\\n\\npragma solidity >=0.7.6;\\n\\nimport \\\"../interfaces/ISuAccessControl.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\\\";\\n\\n/**\\n * @title SuAuthenticated\\n * @dev other contracts should inherit to be authenticated\\n */\\nabstract contract SuAccessControlAuthenticated is Initializable, ISuAccessControl, ContextUpgradeable {\\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\\n    bytes32 public constant DAO_ROLE = 0x00;\\n    bytes32 public constant ADMIN_ROLE = keccak256(\\\"ADMIN_ROLE\\\");\\n    bytes32 public constant COMMUNITY_ADMIN_ROLE = keccak256(\\\"COMMUNITY_ADMIN_ROLE\\\");\\n\\n    /// @dev the address of SuAccessControlSingleton - it should be one for all contract that inherits SuAuthenticated\\n    ISuAccessControl public ACCESS_CONTROL_SINGLETON;\\n\\n    error OnlyRoleError(bytes32 role, address msgSender);\\n\\n    /// @dev should be passed in constructor\\n    function __SuAuthenticated_init(address _accessControlSingleton) internal onlyInitializing {\\n        ACCESS_CONTROL_SINGLETON = ISuAccessControl(_accessControlSingleton);\\n    }\\n\\n    modifier onlyRole(bytes32 role) {\\n        if (!hasRole(role, msg.sender)) revert OnlyRoleError(role, msg.sender);\\n        _;\\n    }\\n\\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\\n        return ACCESS_CONTROL_SINGLETON.hasRole(role, account);\\n    }\\n\\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\\n        return ACCESS_CONTROL_SINGLETON.getRoleAdmin(role);\\n    }\\n\\n\\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\\n        return ACCESS_CONTROL_SINGLETON.supportsInterface(interfaceId);\\n    }\\n    //============================interfaces sugar============================\\n\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0x945d2d816d58d609ca4a481ebc567a6f00a6e1cce88c869c681a867c06e50bb1\",\"license\":\"BSL 1.1\"},\"contracts/interfaces/IBonus.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\\\";\\n\\ninterface IBonus {\\n    /**\\n     * @notice Info for each nft.\\n     * `allocation` User allocation\\n     * `donationBonusRatio` Bonus during distribution\\n    **/\\n    struct NFTInfo {\\n        uint256 allocation;\\n        uint256 donationBonusRatio;\\n    }\\n\\n    /**\\n     * @notice Info of each user.\\n     * `xp` The amount of XP.\\n     * `allocation` User allocation\\n     * `donationBonusRatio` Bonus during distribution\\n    **/\\n    struct UserInfo {\\n        uint256 xp;\\n        uint256 allocation;\\n        uint256 donationBonusRatio;\\n    }\\n\\n    /**\\n     * @notice Info of each admin (Can setup communityAdmin)\\n     * `isAdmin` Boolean if it's admin\\n    **/\\n    struct AdminInfo {\\n        bool isAdmin;\\n    }\\n\\n    /**\\n     * @notice Info of each community admin (Can distribute XP).\\n     * `xpLimit` The amount of XP that admin can distribute over other users\\n     * `levelLimit` Admins can't distribute tokens so that (user level > levelLimit)\\n    **/\\n    struct CommunityAdminInfo {\\n        uint256 xpLimit;\\n        uint16 levelLimit;\\n    }\\n\\n    /**\\n     * @notice Set allocation and donationBonusRatio for NFT\\n     * `isAdmin` Address of admin\\n    **/\\n    function setNftInfo(address nft, uint256 allocation, uint256 donationBonusRatio) external;\\n\\n    /**\\n     * @notice Set allocation and donationBonusRatio for user\\n     * `isAdmin` Address of admin\\n    **/\\n    function setUserInfo(address user, uint256 allocation, uint256 donationBonusRatio) external;\\n\\n    /**\\n     * @notice Get user level according to constant distribution. Max value: 65535\\n     * `user` Address of user\\n    **/\\n    function getLevel(address user) external view returns ( uint16 );\\n\\n    /**\\n     * @notice Add or remove new admin\\n     * `isAdmin` Address of admin\\n    **/\\n    function setAdmin(address admin, bool isAdmin) external;\\n\\n    /**\\n     * @notice Set new community admin parameters\\n     * `admin` Address of admin\\n     * `xpLimit` The amount of XP that admin can distribute over other users\\n     * `levelLimit` Admins can't distribute tokens so that (user level >= levelLimit)\\n    **/\\n    function setCommunityAdmin(address admin, uint256 xpLimit, uint16 levelLimit) external;\\n\\n    /**\\n     * @notice Admin can give xp points to user\\n     * `user` Address of user\\n     * `xp` The amount of XP that admin want to give user (xp <= admin.xpLimit && levelAfter(user) <= admin.levelLimit)\\n    **/\\n    function distributeXp(address user, uint256 xp) external;\\n\\n    /**\\n     * @notice Get user allocation\\n     * `user` Address of user\\n    **/\\n    function getAllocation(address user) external view returns ( uint256 );\\n\\n    /**\\n     * @notice Get user bonus reward for donation\\n     * `user` Address of user\\n    **/\\n    function getBonus(address user) external view returns ( uint256 );\\n\\n    /**\\n     * @notice Get nft allocation\\n     * `user` Address of user\\n    **/\\n    function getNftAllocation(address nft) external view returns ( uint256 );\\n\\n    /**\\n     * @notice Get nft bonus reward for donation\\n     * `user` Address of nft\\n    **/\\n    function getNftBonus(address nft) external view returns ( uint256 );\\n\\n    function isTokenTransferable(address nft, address from, address to, uint256 tokenId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x5d01494c2204b963fe33498edc404e0f0fb31927b66d93374ed60b8b654bd404\",\"license\":\"UNLICENSED\"},\"contracts/interfaces/ISuAccessControl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.7.6;\\n\\n/**\\n * @dev External interface of oz AccessControl and ERC165 detection, need to help to resolve circle dependency.\\n */\\ninterface ISuAccessControl {\\n    function hasRole(bytes32 role, address account) external view returns (bool);\\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\\n\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x8319c248f002af92f0d8f81748fb116602fa48eb08ef372de28ba241600a4ebc\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506123fd806100206000396000f3fe608060405234801561001057600080fd5b50600436106101585760003560e01c806395367f89116100c3578063dbcfb6bb1161007c578063dbcfb6bb14610428578063de6851f814610458578063e3ac1e7714610488578063e9545b92146104a4578063e9c26518146104d5578063f5c972ac146104f357610158565b806395367f8914610353578063a217fddf14610371578063b68ce71c1461038f578063bdab5331146103bf578063c3c41f87146103db578063c4d66de81461040c57610158565b80633a740a63116101155780633a740a631461026d5780634b0bddd21461029d57806375b238fc146102b9578063817c8966146102d757806391d1485414610307578063935920dd1461033757610158565b806301ffc9a71461015d57806303ee9f221461018d5780630e022923146101ab5780631959a002146101db578063248a9ca31461020d5780632a3b4bfd1461023d575b600080fd5b61017760048036038101906101729190611959565b61050f565b60405161018491906119a1565b60405180910390f35b6101956105b4565b6040516101a29190611a3b565b60405180910390f35b6101c560048036038101906101c09190611a94565b6105da565b6040516101d29190611ada565b60405180910390f35b6101f560048036038101906101f09190611a94565b610626565b60405161020493929190611af5565b60405180910390f35b61022760048036038101906102229190611b62565b610650565b6040516102349190611b9e565b60405180910390f35b61025760048036038101906102529190611be5565b6106f5565b60405161026491906119a1565b60405180910390f35b61028760048036038101906102829190611a94565b6106ff565b6040516102949190611ada565b60405180910390f35b6102b760048036038101906102b29190611c78565b61074b565b005b6102c16107fb565b6040516102ce9190611b9e565b60405180910390f35b6102f160048036038101906102ec9190611a94565b61081f565b6040516102fe9190611cd5565b60405180910390f35b610321600480360381019061031c9190611cf0565b610873565b60405161032e91906119a1565b60405180910390f35b610351600480360381019061034c9190611d30565b61091b565b005b61035b610c4e565b6040516103689190611b9e565b60405180910390f35b610379610c72565b6040516103869190611b9e565b60405180910390f35b6103a960048036038101906103a49190611a94565b610c79565b6040516103b691906119a1565b60405180910390f35b6103d960048036038101906103d49190611d70565b610ca4565b005b6103f560048036038101906103f09190611a94565b610dc6565b604051610403929190611dc3565b60405180910390f35b61042660048036038101906104219190611a94565b610df8565b005b610442600480360381019061043d9190611a94565b610f38565b60405161044f9190611ada565b60405180910390f35b610472600480360381019061046d9190611a94565b610f84565b60405161047f9190611ada565b60405180910390f35b6104a2600480360381019061049d9190611e18565b610fd0565b005b6104be60048036038101906104b99190611a94565b611108565b6040516104cc929190611e6b565b60405180910390f35b6104dd61112c565b6040516104ea9190611b9e565b60405180910390f35b61050d60048036038101906105089190611d70565b611133565b005b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166301ffc9a7836040518263ffffffff1660e01b815260040161056c9190611ea3565b602060405180830381865afa158015610589573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105ad9190611ed3565b9050919050565b603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000606660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101549050919050565b60666020528060005260406000206000915090508060000154908060010154908060020154905083565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663248a9ca3836040518263ffffffff1660e01b81526004016106ad9190611b9e565b602060405180830381865afa1580156106ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ee9190611f15565b9050919050565b6000949350505050565b6000606660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201549050919050565b6000801b6107598133610873565b61079c5780336040517f37c2e343000000000000000000000000000000000000000000000000000000008152600401610793929190611f51565b60405180910390fd5b81606860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548160ff021916908315150217905550505050565b7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177581565b600061086c606660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154611255565b9050919050565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166391d1485484846040518363ffffffff1660e01b81526004016108d2929190611f51565b602060405180830381865afa1580156108ef573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109139190611ed3565b905092915050565b6000606760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900461ffff1661ffff16116109b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109a990611fd7565b60405180910390fd5b606760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154811115610a37576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a2e90612069565b60405180910390fd5b80606760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154610a8591906120b8565b606760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018190555080606660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154610b1991906120ec565b606660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055506000610bac606660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154611255565b9050606760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900461ffff1661ffff168161ffff161115610c49576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c40906121b4565b60405180910390fd5b505050565b7f0a7cc066f24e107ff77c42c8a1bdaf1a5f775fa4a74e45530aaf9c866368f65381565b6000801b81565b60686020528060005260406000206000915090508060000160009054906101000a900460ff16905081565b606860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff16610d33576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d2a90612220565b60405180910390fd5b81606560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018190555080606560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010181905550505050565b60676020528060005260406000206000915090508060000154908060010160009054906101000a900461ffff16905082565b60008060019054906101000a900460ff16159050808015610e295750600160008054906101000a900460ff1660ff16105b80610e565750610e3830611846565b158015610e555750600160008054906101000a900460ff1660ff16145b5b610e95576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e8c906122b2565b60405180910390fd5b60016000806101000a81548160ff021916908360ff1602179055508015610ed2576001600060016101000a81548160ff0219169083151502179055505b610edb82611869565b8015610f345760008060016101000a81548160ff0219169083151502179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024986001604051610f2b919061231a565b60405180910390a15b5050565b6000606560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101549050919050565b6000606560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001549050919050565b606860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff1661105f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161105690612220565b60405180910390fd5b81606760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018190555080606760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160006101000a81548161ffff021916908361ffff160217905550505050565b60656020528060005260406000206000915090508060000154908060010154905082565b6000801b81565b606860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff166111c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111b990612220565b60405180910390fd5b81606660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018190555080606660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020181905550505050565b60006103e882101561126a5760019050611841565b6107d082101561127d5760029050611841565b610c808210156112905760039050611841565b6111f88210156112a35760049050611841565b6118388210156112b65760059050611841565b611f408210156112c95760069050611841565b6127108210156112dc5760079050611841565b612fa88210156112ef5760089050611841565b61396c8210156113025760099050611841565b61445c82101561131557600a9050611841565b61507882101561132857600b9050611841565b615f0082101561133b57600c9050611841565b61707082101561134e57600d9050611841565b61855c82101561136157600e9050611841565b619e7782101561137457600f9050611841565b61bc978210156113875760109050611841565b61e0bd82101561139a5760119050611841565b62010c1d8210156113ae5760129050611841565b620140298210156113c25760139050611841565b62017e9d8210156113d65760149050611841565b6201c98e8210156113ea5760159050611841565b6202237c8210156113fe5760169050611841565b62028f668210156114125760179050611841565b620310e58210156114265760189050611841565b6203ac4a82101561143a5760199050611841565b620466c382101561144e57601a9050611841565b6205468782101561146257601b9050611841565b6206530b82101561147657601c9050611841565b6207954382101561148a57601d9050611841565b620917ec82101561149e57601e9050611841565b620ae7ea8210156114b257601f9050611841565b620d14b48210156114c65760209050611841565b620fb0d98210156114da5760219050611841565b6212d29f8210156114ee5760229050611841565b621694bf8210156115025760239050611841565b621b174b8210156115165760249050611841565b622080bf82101561152a5760259050611841565b6226ff4a82101561153e5760269050611841565b622eca578210156115525760279050611841565b623824668210156115665760289050611841565b62435d4482101561157a5760299050611841565b6250d4b482101561158e57602a9050611841565b6260fda08210156115a257602b9050611841565b627461ee8210156115b657602c9050611841565b628ba7188210156115ca57602d9050611841565b62a793b08210156115de57602e9050611841565b62c916008210156115f257602f9050611841565b62f14bf98210156116065760309050611841565b6301218cbd82101561161b5760319050611841565b63015b740e8210156116305760329050611841565b6301a0f0088210156116455760339050611841565b6301f4519a82101561165a5760349050611841565b630258604982101561166f5760359050611841565b6302d071e78210156116845760369050611841565b630360870b8210156116995760379050611841565b63040d6d368210156116ae5760389050611841565b6304dce7d08210156116c35760399050611841565b6305d5e1558210156116d857603a9050611841565b630700a65b8210156116ed57603b9050611841565b6308672c6282101561170257603c9050611841565b630a1566d082101561171757603d9050611841565b630c19aced82101561172c57603e9050611841565b630e85344382101561174157603f9050611841565b63116ca3778210156117565760409050611841565b6314e8c28282101561176b5760419050611841565b6319174e288210156117805760429050611841565b631e1bf5bc8210156117955760439050611841565b6324218ba08210156117aa5760449050611841565b632b5b72b18210156117bf5760459050611841565b63340754c58210156117d45760469050611841565b633e6f30dd8210156117e95760479050611841565b634aebd2938210156117fe5760489050611841565b6359e7c7d38210156118135760499050611841565b636be2ee1f82101561182857604a9050611841565b636be2ee1f821061183c57604b9050611841565b600190505b919050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600060019054906101000a900460ff166118b8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118af906123a7565b60405180910390fd5b80603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61193681611901565b811461194157600080fd5b50565b6000813590506119538161192d565b92915050565b60006020828403121561196f5761196e6118fc565b5b600061197d84828501611944565b91505092915050565b60008115159050919050565b61199b81611986565b82525050565b60006020820190506119b66000830184611992565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000611a016119fc6119f7846119bc565b6119dc565b6119bc565b9050919050565b6000611a13826119e6565b9050919050565b6000611a2582611a08565b9050919050565b611a3581611a1a565b82525050565b6000602082019050611a506000830184611a2c565b92915050565b6000611a61826119bc565b9050919050565b611a7181611a56565b8114611a7c57600080fd5b50565b600081359050611a8e81611a68565b92915050565b600060208284031215611aaa57611aa96118fc565b5b6000611ab884828501611a7f565b91505092915050565b6000819050919050565b611ad481611ac1565b82525050565b6000602082019050611aef6000830184611acb565b92915050565b6000606082019050611b0a6000830186611acb565b611b176020830185611acb565b611b246040830184611acb565b949350505050565b6000819050919050565b611b3f81611b2c565b8114611b4a57600080fd5b50565b600081359050611b5c81611b36565b92915050565b600060208284031215611b7857611b776118fc565b5b6000611b8684828501611b4d565b91505092915050565b611b9881611b2c565b82525050565b6000602082019050611bb36000830184611b8f565b92915050565b611bc281611ac1565b8114611bcd57600080fd5b50565b600081359050611bdf81611bb9565b92915050565b60008060008060808587031215611bff57611bfe6118fc565b5b6000611c0d87828801611a7f565b9450506020611c1e87828801611a7f565b9350506040611c2f87828801611a7f565b9250506060611c4087828801611bd0565b91505092959194509250565b611c5581611986565b8114611c6057600080fd5b50565b600081359050611c7281611c4c565b92915050565b60008060408385031215611c8f57611c8e6118fc565b5b6000611c9d85828601611a7f565b9250506020611cae85828601611c63565b9150509250929050565b600061ffff82169050919050565b611ccf81611cb8565b82525050565b6000602082019050611cea6000830184611cc6565b92915050565b60008060408385031215611d0757611d066118fc565b5b6000611d1585828601611b4d565b9250506020611d2685828601611a7f565b9150509250929050565b60008060408385031215611d4757611d466118fc565b5b6000611d5585828601611a7f565b9250506020611d6685828601611bd0565b9150509250929050565b600080600060608486031215611d8957611d886118fc565b5b6000611d9786828701611a7f565b9350506020611da886828701611bd0565b9250506040611db986828701611bd0565b9150509250925092565b6000604082019050611dd86000830185611acb565b611de56020830184611cc6565b9392505050565b611df581611cb8565b8114611e0057600080fd5b50565b600081359050611e1281611dec565b92915050565b600080600060608486031215611e3157611e306118fc565b5b6000611e3f86828701611a7f565b9350506020611e5086828701611bd0565b9250506040611e6186828701611e03565b9150509250925092565b6000604082019050611e806000830185611acb565b611e8d6020830184611acb565b9392505050565b611e9d81611901565b82525050565b6000602082019050611eb86000830184611e94565b92915050565b600081519050611ecd81611c4c565b92915050565b600060208284031215611ee957611ee86118fc565b5b6000611ef784828501611ebe565b91505092915050565b600081519050611f0f81611b36565b92915050565b600060208284031215611f2b57611f2a6118fc565b5b6000611f3984828501611f00565b91505092915050565b611f4b81611a56565b82525050565b6000604082019050611f666000830185611b8f565b611f736020830184611f42565b9392505050565b600082825260208201905092915050565b7f4e65656420636f6d6d756e69747941646d696e20726967687473000000000000600082015250565b6000611fc1601a83611f7a565b9150611fcc82611f8b565b602082019050919050565b60006020820190508181036000830152611ff081611fb4565b9050919050565b7f585020746f20646973747269627574652073686f756c646e2774206265206d6f60008201527f7265207468616e2061646d696e2078704c696d69740000000000000000000000602082015250565b6000612053603583611f7a565b915061205e82611ff7565b604082019050919050565b6000602082019050818103600083015261208281612046565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006120c382611ac1565b91506120ce83611ac1565b9250828210156120e1576120e0612089565b5b828203905092915050565b60006120f782611ac1565b915061210283611ac1565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561213757612136612089565b5b828201905092915050565b7f55736572206c6576656c2073686f756c64206265206c657373207468616e206160008201527f646d696e206c6576656c4c696d69740000000000000000000000000000000000602082015250565b600061219e602f83611f7a565b91506121a982612142565b604082019050919050565b600060208201905081810360008301526121cd81612191565b9050919050565b7f4e6565642061646d696e20726967687473000000000000000000000000000000600082015250565b600061220a601183611f7a565b9150612215826121d4565b602082019050919050565b60006020820190508181036000830152612239816121fd565b9050919050565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b600061229c602e83611f7a565b91506122a782612240565b604082019050919050565b600060208201905081810360008301526122cb8161228f565b9050919050565b6000819050919050565b600060ff82169050919050565b60006123046122ff6122fa846122d2565b6119dc565b6122dc565b9050919050565b612314816122e9565b82525050565b600060208201905061232f600083018461230b565b92915050565b7f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960008201527f6e697469616c697a696e67000000000000000000000000000000000000000000602082015250565b6000612391602b83611f7a565b915061239c82612335565b604082019050919050565b600060208201905081810360008301526123c081612384565b905091905056fea2646970667358221220f424cb9239a1a8e686bea889f966cb7038e138877a058be5d4a6a9cdab757af764736f6c634300080f0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101585760003560e01c806395367f89116100c3578063dbcfb6bb1161007c578063dbcfb6bb14610428578063de6851f814610458578063e3ac1e7714610488578063e9545b92146104a4578063e9c26518146104d5578063f5c972ac146104f357610158565b806395367f8914610353578063a217fddf14610371578063b68ce71c1461038f578063bdab5331146103bf578063c3c41f87146103db578063c4d66de81461040c57610158565b80633a740a63116101155780633a740a631461026d5780634b0bddd21461029d57806375b238fc146102b9578063817c8966146102d757806391d1485414610307578063935920dd1461033757610158565b806301ffc9a71461015d57806303ee9f221461018d5780630e022923146101ab5780631959a002146101db578063248a9ca31461020d5780632a3b4bfd1461023d575b600080fd5b61017760048036038101906101729190611959565b61050f565b60405161018491906119a1565b60405180910390f35b6101956105b4565b6040516101a29190611a3b565b60405180910390f35b6101c560048036038101906101c09190611a94565b6105da565b6040516101d29190611ada565b60405180910390f35b6101f560048036038101906101f09190611a94565b610626565b60405161020493929190611af5565b60405180910390f35b61022760048036038101906102229190611b62565b610650565b6040516102349190611b9e565b60405180910390f35b61025760048036038101906102529190611be5565b6106f5565b60405161026491906119a1565b60405180910390f35b61028760048036038101906102829190611a94565b6106ff565b6040516102949190611ada565b60405180910390f35b6102b760048036038101906102b29190611c78565b61074b565b005b6102c16107fb565b6040516102ce9190611b9e565b60405180910390f35b6102f160048036038101906102ec9190611a94565b61081f565b6040516102fe9190611cd5565b60405180910390f35b610321600480360381019061031c9190611cf0565b610873565b60405161032e91906119a1565b60405180910390f35b610351600480360381019061034c9190611d30565b61091b565b005b61035b610c4e565b6040516103689190611b9e565b60405180910390f35b610379610c72565b6040516103869190611b9e565b60405180910390f35b6103a960048036038101906103a49190611a94565b610c79565b6040516103b691906119a1565b60405180910390f35b6103d960048036038101906103d49190611d70565b610ca4565b005b6103f560048036038101906103f09190611a94565b610dc6565b604051610403929190611dc3565b60405180910390f35b61042660048036038101906104219190611a94565b610df8565b005b610442600480360381019061043d9190611a94565b610f38565b60405161044f9190611ada565b60405180910390f35b610472600480360381019061046d9190611a94565b610f84565b60405161047f9190611ada565b60405180910390f35b6104a2600480360381019061049d9190611e18565b610fd0565b005b6104be60048036038101906104b99190611a94565b611108565b6040516104cc929190611e6b565b60405180910390f35b6104dd61112c565b6040516104ea9190611b9e565b60405180910390f35b61050d60048036038101906105089190611d70565b611133565b005b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166301ffc9a7836040518263ffffffff1660e01b815260040161056c9190611ea3565b602060405180830381865afa158015610589573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105ad9190611ed3565b9050919050565b603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000606660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101549050919050565b60666020528060005260406000206000915090508060000154908060010154908060020154905083565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663248a9ca3836040518263ffffffff1660e01b81526004016106ad9190611b9e565b602060405180830381865afa1580156106ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ee9190611f15565b9050919050565b6000949350505050565b6000606660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201549050919050565b6000801b6107598133610873565b61079c5780336040517f37c2e343000000000000000000000000000000000000000000000000000000008152600401610793929190611f51565b60405180910390fd5b81606860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548160ff021916908315150217905550505050565b7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177581565b600061086c606660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154611255565b9050919050565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166391d1485484846040518363ffffffff1660e01b81526004016108d2929190611f51565b602060405180830381865afa1580156108ef573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109139190611ed3565b905092915050565b6000606760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900461ffff1661ffff16116109b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109a990611fd7565b60405180910390fd5b606760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154811115610a37576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a2e90612069565b60405180910390fd5b80606760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154610a8591906120b8565b606760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018190555080606660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154610b1991906120ec565b606660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055506000610bac606660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154611255565b9050606760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900461ffff1661ffff168161ffff161115610c49576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c40906121b4565b60405180910390fd5b505050565b7f0a7cc066f24e107ff77c42c8a1bdaf1a5f775fa4a74e45530aaf9c866368f65381565b6000801b81565b60686020528060005260406000206000915090508060000160009054906101000a900460ff16905081565b606860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff16610d33576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d2a90612220565b60405180910390fd5b81606560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018190555080606560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010181905550505050565b60676020528060005260406000206000915090508060000154908060010160009054906101000a900461ffff16905082565b60008060019054906101000a900460ff16159050808015610e295750600160008054906101000a900460ff1660ff16105b80610e565750610e3830611846565b158015610e555750600160008054906101000a900460ff1660ff16145b5b610e95576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e8c906122b2565b60405180910390fd5b60016000806101000a81548160ff021916908360ff1602179055508015610ed2576001600060016101000a81548160ff0219169083151502179055505b610edb82611869565b8015610f345760008060016101000a81548160ff0219169083151502179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024986001604051610f2b919061231a565b60405180910390a15b5050565b6000606560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101549050919050565b6000606560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001549050919050565b606860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff1661105f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161105690612220565b60405180910390fd5b81606760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018190555080606760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160006101000a81548161ffff021916908361ffff160217905550505050565b60656020528060005260406000206000915090508060000154908060010154905082565b6000801b81565b606860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff166111c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111b990612220565b60405180910390fd5b81606660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018190555080606660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020181905550505050565b60006103e882101561126a5760019050611841565b6107d082101561127d5760029050611841565b610c808210156112905760039050611841565b6111f88210156112a35760049050611841565b6118388210156112b65760059050611841565b611f408210156112c95760069050611841565b6127108210156112dc5760079050611841565b612fa88210156112ef5760089050611841565b61396c8210156113025760099050611841565b61445c82101561131557600a9050611841565b61507882101561132857600b9050611841565b615f0082101561133b57600c9050611841565b61707082101561134e57600d9050611841565b61855c82101561136157600e9050611841565b619e7782101561137457600f9050611841565b61bc978210156113875760109050611841565b61e0bd82101561139a5760119050611841565b62010c1d8210156113ae5760129050611841565b620140298210156113c25760139050611841565b62017e9d8210156113d65760149050611841565b6201c98e8210156113ea5760159050611841565b6202237c8210156113fe5760169050611841565b62028f668210156114125760179050611841565b620310e58210156114265760189050611841565b6203ac4a82101561143a5760199050611841565b620466c382101561144e57601a9050611841565b6205468782101561146257601b9050611841565b6206530b82101561147657601c9050611841565b6207954382101561148a57601d9050611841565b620917ec82101561149e57601e9050611841565b620ae7ea8210156114b257601f9050611841565b620d14b48210156114c65760209050611841565b620fb0d98210156114da5760219050611841565b6212d29f8210156114ee5760229050611841565b621694bf8210156115025760239050611841565b621b174b8210156115165760249050611841565b622080bf82101561152a5760259050611841565b6226ff4a82101561153e5760269050611841565b622eca578210156115525760279050611841565b623824668210156115665760289050611841565b62435d4482101561157a5760299050611841565b6250d4b482101561158e57602a9050611841565b6260fda08210156115a257602b9050611841565b627461ee8210156115b657602c9050611841565b628ba7188210156115ca57602d9050611841565b62a793b08210156115de57602e9050611841565b62c916008210156115f257602f9050611841565b62f14bf98210156116065760309050611841565b6301218cbd82101561161b5760319050611841565b63015b740e8210156116305760329050611841565b6301a0f0088210156116455760339050611841565b6301f4519a82101561165a5760349050611841565b630258604982101561166f5760359050611841565b6302d071e78210156116845760369050611841565b630360870b8210156116995760379050611841565b63040d6d368210156116ae5760389050611841565b6304dce7d08210156116c35760399050611841565b6305d5e1558210156116d857603a9050611841565b630700a65b8210156116ed57603b9050611841565b6308672c6282101561170257603c9050611841565b630a1566d082101561171757603d9050611841565b630c19aced82101561172c57603e9050611841565b630e85344382101561174157603f9050611841565b63116ca3778210156117565760409050611841565b6314e8c28282101561176b5760419050611841565b6319174e288210156117805760429050611841565b631e1bf5bc8210156117955760439050611841565b6324218ba08210156117aa5760449050611841565b632b5b72b18210156117bf5760459050611841565b63340754c58210156117d45760469050611841565b633e6f30dd8210156117e95760479050611841565b634aebd2938210156117fe5760489050611841565b6359e7c7d38210156118135760499050611841565b636be2ee1f82101561182857604a9050611841565b636be2ee1f821061183c57604b9050611841565b600190505b919050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600060019054906101000a900460ff166118b8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118af906123a7565b60405180910390fd5b80603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61193681611901565b811461194157600080fd5b50565b6000813590506119538161192d565b92915050565b60006020828403121561196f5761196e6118fc565b5b600061197d84828501611944565b91505092915050565b60008115159050919050565b61199b81611986565b82525050565b60006020820190506119b66000830184611992565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000611a016119fc6119f7846119bc565b6119dc565b6119bc565b9050919050565b6000611a13826119e6565b9050919050565b6000611a2582611a08565b9050919050565b611a3581611a1a565b82525050565b6000602082019050611a506000830184611a2c565b92915050565b6000611a61826119bc565b9050919050565b611a7181611a56565b8114611a7c57600080fd5b50565b600081359050611a8e81611a68565b92915050565b600060208284031215611aaa57611aa96118fc565b5b6000611ab884828501611a7f565b91505092915050565b6000819050919050565b611ad481611ac1565b82525050565b6000602082019050611aef6000830184611acb565b92915050565b6000606082019050611b0a6000830186611acb565b611b176020830185611acb565b611b246040830184611acb565b949350505050565b6000819050919050565b611b3f81611b2c565b8114611b4a57600080fd5b50565b600081359050611b5c81611b36565b92915050565b600060208284031215611b7857611b776118fc565b5b6000611b8684828501611b4d565b91505092915050565b611b9881611b2c565b82525050565b6000602082019050611bb36000830184611b8f565b92915050565b611bc281611ac1565b8114611bcd57600080fd5b50565b600081359050611bdf81611bb9565b92915050565b60008060008060808587031215611bff57611bfe6118fc565b5b6000611c0d87828801611a7f565b9450506020611c1e87828801611a7f565b9350506040611c2f87828801611a7f565b9250506060611c4087828801611bd0565b91505092959194509250565b611c5581611986565b8114611c6057600080fd5b50565b600081359050611c7281611c4c565b92915050565b60008060408385031215611c8f57611c8e6118fc565b5b6000611c9d85828601611a7f565b9250506020611cae85828601611c63565b9150509250929050565b600061ffff82169050919050565b611ccf81611cb8565b82525050565b6000602082019050611cea6000830184611cc6565b92915050565b60008060408385031215611d0757611d066118fc565b5b6000611d1585828601611b4d565b9250506020611d2685828601611a7f565b9150509250929050565b60008060408385031215611d4757611d466118fc565b5b6000611d5585828601611a7f565b9250506020611d6685828601611bd0565b9150509250929050565b600080600060608486031215611d8957611d886118fc565b5b6000611d9786828701611a7f565b9350506020611da886828701611bd0565b9250506040611db986828701611bd0565b9150509250925092565b6000604082019050611dd86000830185611acb565b611de56020830184611cc6565b9392505050565b611df581611cb8565b8114611e0057600080fd5b50565b600081359050611e1281611dec565b92915050565b600080600060608486031215611e3157611e306118fc565b5b6000611e3f86828701611a7f565b9350506020611e5086828701611bd0565b9250506040611e6186828701611e03565b9150509250925092565b6000604082019050611e806000830185611acb565b611e8d6020830184611acb565b9392505050565b611e9d81611901565b82525050565b6000602082019050611eb86000830184611e94565b92915050565b600081519050611ecd81611c4c565b92915050565b600060208284031215611ee957611ee86118fc565b5b6000611ef784828501611ebe565b91505092915050565b600081519050611f0f81611b36565b92915050565b600060208284031215611f2b57611f2a6118fc565b5b6000611f3984828501611f00565b91505092915050565b611f4b81611a56565b82525050565b6000604082019050611f666000830185611b8f565b611f736020830184611f42565b9392505050565b600082825260208201905092915050565b7f4e65656420636f6d6d756e69747941646d696e20726967687473000000000000600082015250565b6000611fc1601a83611f7a565b9150611fcc82611f8b565b602082019050919050565b60006020820190508181036000830152611ff081611fb4565b9050919050565b7f585020746f20646973747269627574652073686f756c646e2774206265206d6f60008201527f7265207468616e2061646d696e2078704c696d69740000000000000000000000602082015250565b6000612053603583611f7a565b915061205e82611ff7565b604082019050919050565b6000602082019050818103600083015261208281612046565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006120c382611ac1565b91506120ce83611ac1565b9250828210156120e1576120e0612089565b5b828203905092915050565b60006120f782611ac1565b915061210283611ac1565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561213757612136612089565b5b828201905092915050565b7f55736572206c6576656c2073686f756c64206265206c657373207468616e206160008201527f646d696e206c6576656c4c696d69740000000000000000000000000000000000602082015250565b600061219e602f83611f7a565b91506121a982612142565b604082019050919050565b600060208201905081810360008301526121cd81612191565b9050919050565b7f4e6565642061646d696e20726967687473000000000000000000000000000000600082015250565b600061220a601183611f7a565b9150612215826121d4565b602082019050919050565b60006020820190508181036000830152612239816121fd565b9050919050565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b600061229c602e83611f7a565b91506122a782612240565b604082019050919050565b600060208201905081810360008301526122cb8161228f565b9050919050565b6000819050919050565b600060ff82169050919050565b60006123046122ff6122fa846122d2565b6119dc565b6122dc565b9050919050565b612314816122e9565b82525050565b600060208201905061232f600083018461230b565b92915050565b7f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960008201527f6e697469616c697a696e67000000000000000000000000000000000000000000602082015250565b6000612391602b83611f7a565b915061239c82612335565b604082019050919050565b600060208201905081810360008301526123c081612384565b905091905056fea2646970667358221220f424cb9239a1a8e686bea889f966cb7038e138877a058be5d4a6a9cdab757af764736f6c634300080f0033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "stateVariables": {
      "__gap": {
        "details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "distributeXp(address,uint256)": {
        "notice": "Admin can give xp points to user `user` Address of user `xp` The amount of XP that admin want to give user (xp <= admin.xpLimit && levelAfter(user) <= admin.levelLimit)*"
      },
      "getAllocation(address)": {
        "notice": "Get user allocation `user` Address of user*"
      },
      "getBonus(address)": {
        "notice": "Get user bonus reward for donation `user` Address of user*"
      },
      "getLevel(address)": {
        "notice": "Get user level according to constant distribution. Max value: 65535 `user` Address of user*"
      },
      "getNftAllocation(address)": {
        "notice": "Get nft allocation `user` Address of user*"
      },
      "getNftBonus(address)": {
        "notice": "Get nft bonus reward for donation `user` Address of nft*"
      },
      "isTokenTransferable(address,address,address,uint256)": {
        "notice": "Returns true/false whether this NFT with tokenId tokens can be transfer"
      },
      "setAdmin(address,bool)": {
        "notice": "Add or remove new admin `isAdmin` Address of admin*"
      },
      "setNftInfo(address,uint256,uint256)": {
        "notice": "Set allocation and donationBonusRatio for NFT `isAdmin` Address of admin*"
      },
      "setUserInfo(address,uint256,uint256)": {
        "notice": "Set allocation and donationBonusRatio for user `isAdmin` Address of admin*"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 497,
        "contract": "contracts/Bonus.sol:Bonus",
        "label": "_initialized",
        "offset": 0,
        "slot": "0",
        "type": "t_uint8"
      },
      {
        "astId": 500,
        "contract": "contracts/Bonus.sol:Bonus",
        "label": "_initializing",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 4310,
        "contract": "contracts/Bonus.sol:Bonus",
        "label": "__gap",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_uint256)50_storage"
      },
      {
        "astId": 13374,
        "contract": "contracts/Bonus.sol:Bonus",
        "label": "ACCESS_CONTROL_SINGLETON",
        "offset": 0,
        "slot": "51",
        "type": "t_contract(ISuAccessControl)14743"
      },
      {
        "astId": 13461,
        "contract": "contracts/Bonus.sol:Bonus",
        "label": "__gap",
        "offset": 0,
        "slot": "52",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 12372,
        "contract": "contracts/Bonus.sol:Bonus",
        "label": "nftInfo",
        "offset": 0,
        "slot": "101",
        "type": "t_mapping(t_address,t_struct(NFTInfo)14601_storage)"
      },
      {
        "astId": 12377,
        "contract": "contracts/Bonus.sol:Bonus",
        "label": "userInfo",
        "offset": 0,
        "slot": "102",
        "type": "t_mapping(t_address,t_struct(UserInfo)14608_storage)"
      },
      {
        "astId": 12382,
        "contract": "contracts/Bonus.sol:Bonus",
        "label": "communityAdminInfo",
        "offset": 0,
        "slot": "103",
        "type": "t_mapping(t_address,t_struct(CommunityAdminInfo)14616_storage)"
      },
      {
        "astId": 12387,
        "contract": "contracts/Bonus.sol:Bonus",
        "label": "adminInfo",
        "offset": 0,
        "slot": "104",
        "type": "t_mapping(t_address,t_struct(AdminInfo)14611_storage)"
      },
      {
        "astId": 13151,
        "contract": "contracts/Bonus.sol:Bonus",
        "label": "__gap",
        "offset": 0,
        "slot": "105",
        "type": "t_array(t_uint256)45_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_uint256)45_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[45]",
        "numberOfBytes": "1440"
      },
      "t_array(t_uint256)49_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[49]",
        "numberOfBytes": "1568"
      },
      "t_array(t_uint256)50_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[50]",
        "numberOfBytes": "1600"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(ISuAccessControl)14743": {
        "encoding": "inplace",
        "label": "contract ISuAccessControl",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_struct(AdminInfo)14611_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct IBonus.AdminInfo)",
        "numberOfBytes": "32",
        "value": "t_struct(AdminInfo)14611_storage"
      },
      "t_mapping(t_address,t_struct(CommunityAdminInfo)14616_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct IBonus.CommunityAdminInfo)",
        "numberOfBytes": "32",
        "value": "t_struct(CommunityAdminInfo)14616_storage"
      },
      "t_mapping(t_address,t_struct(NFTInfo)14601_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct IBonus.NFTInfo)",
        "numberOfBytes": "32",
        "value": "t_struct(NFTInfo)14601_storage"
      },
      "t_mapping(t_address,t_struct(UserInfo)14608_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct IBonus.UserInfo)",
        "numberOfBytes": "32",
        "value": "t_struct(UserInfo)14608_storage"
      },
      "t_struct(AdminInfo)14611_storage": {
        "encoding": "inplace",
        "label": "struct IBonus.AdminInfo",
        "members": [
          {
            "astId": 14610,
            "contract": "contracts/Bonus.sol:Bonus",
            "label": "isAdmin",
            "offset": 0,
            "slot": "0",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "32"
      },
      "t_struct(CommunityAdminInfo)14616_storage": {
        "encoding": "inplace",
        "label": "struct IBonus.CommunityAdminInfo",
        "members": [
          {
            "astId": 14613,
            "contract": "contracts/Bonus.sol:Bonus",
            "label": "xpLimit",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 14615,
            "contract": "contracts/Bonus.sol:Bonus",
            "label": "levelLimit",
            "offset": 0,
            "slot": "1",
            "type": "t_uint16"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_struct(NFTInfo)14601_storage": {
        "encoding": "inplace",
        "label": "struct IBonus.NFTInfo",
        "members": [
          {
            "astId": 14598,
            "contract": "contracts/Bonus.sol:Bonus",
            "label": "allocation",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 14600,
            "contract": "contracts/Bonus.sol:Bonus",
            "label": "donationBonusRatio",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_struct(UserInfo)14608_storage": {
        "encoding": "inplace",
        "label": "struct IBonus.UserInfo",
        "members": [
          {
            "astId": 14603,
            "contract": "contracts/Bonus.sol:Bonus",
            "label": "xp",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 14605,
            "contract": "contracts/Bonus.sol:Bonus",
            "label": "allocation",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 14607,
            "contract": "contracts/Bonus.sol:Bonus",
            "label": "donationBonusRatio",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_uint16": {
        "encoding": "inplace",
        "label": "uint16",
        "numberOfBytes": "2"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}